{
  "hash": "a7c0230b6f5dd3e4d227cd0a87e07737",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: Kevin Navarrete-Parra\ncategories:\n- Books\n- Reading\ndate: '2024-01-07'\ndescription: A different way to keep track of books read in a year.\ndraft: true\nformat: html\ntitle: Counting Books Read in a Year\ntoc: true\nexecute: \n  eval: false\n---\n\n# Table of contents\n1. [Introduction](#section1)\n2. [Weighting by Length](#section2)\n3. [Section 3](#section3)\n4. [Section 4](#section4)\n\n\n# Introduction <a name=\"section1\"></a>\n\nSince it is now the new year, it is finally time to take a look at many readers' favorite statistic: the number of books read in the past year. As excited as I was to see my number, I couldn't help thinking about how flawed the statistic is as a means of measuring the reading done in a given year. Of course, it is quite simple to figure out and will likely give you *some* idea of how much you read, but it is far from perfect. The most obvious flaw, of course, is that the measure does not account for book length, which means that you could end up with the same number of books read at the end of the year if you spend your days reading tomes like *War and Peace* or if you spend time reading novellas. Now, I don't claim to spend my time reading books like the former all the time, but I also don't spend my whole year reading short stories. I like to think I have a healthy mix of both, and I also know that I read plenty of mid-sized books as well. \n\nHowever, I recently came across an [article][2] that pointed out other flaws with the end-of-year figure. Emma Sarappo points out that there's more fault to be found than the simple length of the books read during a given year. Difficulty, for one, is invariably going to be a significant factor that impacts the number of books one can read during a given year. It is one thing to say that you've read 60 casual fiction books in a year, but it is another to say that you've trudged through 60 books worth of Foucault, Proust, and Diderot! I don't mean to imply that one is inherently preferable to the other, but rather that one set of books requires a different kind of reading than the other. The former set of books is pleasant to read, and they're very good for unwinding after a hard week of work. The latter set, on the other hand, requires careful reading and meticulous attention--often to be accompanied by a notebook and frustrating reread. \n\nMoreover, there is more to *reading* than simply devouring books. There are the dozens of news articles one might read during a given month, the hundreds of pages worth of research articles one might have to read for work or school, and the thousands of posts one might skim through on social media. Having a year-end statistic that accounts for the full spectrum of reading one does throughout the year is much more complicated than finding the sum of books one reads.\n\nNow, I don't intend to look for a measure that might account for *all* of that. Doing so would likely require much more work than it would be worth. However, that does not mean that readers should stick to the summative measure without digging deeper into the number. I think there are a few things we could do to make the year-end figure a little more interesting!\n\n# Weighting by Length <a name=\"section2\"></a>\n\nThe first of these measures would be to weight the year-end figure by the length of each book read during a given year. This would be a simple way to control for the difference between reading an 80-page novella and a 1,000-page tome. \n\nThe first step, of course, is to get the data. My favorite app is [Reading List][3], which provides a simple interface for tracking all the books you read or want to read. Conveniently, it also provides a simple way to export all of my reading data to a csv file. However, this should work with just about any system that allows you to get your hands on a data file with a page count variable for each book.\n\nOnce you have the data, you can import it into whatever statistical program you prefer. I like *R*, so I'll be using that for the rest of the post, but there's no reason why you can't do this in Python, Excel, or any other type of program suited to this type of work. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nbooks <- read.csv(\"readinglist.csv\")\n```\n:::\n\n\nOnce I have those data imported into R, I have to quickly run some code to clean the variables because they're not quite ready to be used. I'll start by cleaning the `Finished.Reading` variable, which provides a date value indicating when I finished reading the given book. [Reading List][3] exports this variable in yyyy-mm-dd format, which is nice, but it also means that I can't do much with it because it is currently being treated as a character variable due to the dashes. I'll use the `lubridate` package bundled in the `tidyverse` to convert the variable to a date variable. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nbooks <- books %>%\n  mutate(Finished.Reading = ymd(Finished.Reading),\n         year = lubridate::year(Finished.Reading),\n         month = lubridate::month(Finished.Reading),\n         day = lubridate::day(Finished.Reading))\n```\n:::\n\n\nThe code above begins by reformatting the `Finished.Reading` variable so that it appears as yyyymmdd instead of yyyy-mm-dd. Next, I generated three new variables: one for year, month, and day, respectively. The latter two will probably not be too useful for our purposes here, but they might come in handy later for some visualizations. \n\nNow that I have my data correctly formatted, I can subset the data so that I only have the books I read in 2023. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nyear <- books %>%\n  filter(year == 2023)\n```\n:::\n\n\nNow that we have the data we want to work with, we can start to calculate the weighted sum of books read in 2023. I'll be doing so with the function below, which I'll explain in a moment. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# where x is the page count variable\nweighted_length <- function(x) {\n\n  #  rescale your page count variable to a 0-1 scale\n  p1 <- scales::rescale(x, to = c(1, 2))\n\n  # round the sum of the rescaled variable to 2 decimal places\n  wsum <- round(sum(p1), 2)\n\n  # get the unweighted sum of the page count variable\n  usum <- length(x)\n\n  # return a data frame with the weighted and unweighted sums\n  output <- data.frame(wsum = wsum, usum = usum)\n  return(output)\n\n}\n```\n:::\n\n\nThe function above is not too complicated, but there are a few important choices I made in need of justification. First, I chose to rescale the page count variable to a 0-1 scale. This means that the lowest page count in the data will be 0 and the highest will be 1. This is important for a few reasons. First, it makes working with the page count variable much more manageable. More importantly, it'll make it so that the output value will look strikingly similar to the unweighted value, which makes interpreting the output much easier. \n\nThe next thing I did was add 1 to each standardized value of the page count. This is also very important for two reasons. First of all, we wouldn't want to eliminate the book with the lowest page count from the weighted sum. More importantly, however, is that adding one makes it so that each book is worth at least one in the final sum, thereby reflecting the fact that each book was *finished* regardless of page length. \n\nThese first two points are the most important for this calculus, and they're ultimately the ones that need the most defending. However, I think that they do a good job of reflecting each book's page length without losing any information. The next steps are more matters of preference. I chose to round the sum of the rescaled variable to two decimal places because I think it looks nicer than having a bunch of decimals. Moreover, I think it's fun to see how much conceptual progress I made toward an additional book. \n\nRunning the function above would look like this: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nweighted_length(year$Page.Count)\n```\n:::\n\n\nAnd the output should be a simple table with the weighted and unweighted sums. My unweighted sum(usum) for 2023 was 57 books. My weighted sum(wsum) was 71.43, which means that I \n\n\n\n\n\n\n# Section 3 <a name=\"section3\"></a>\n\n\n\n\n\n\n\n\n# Section 4 <a name=\"section4\"></a>\n\n\n\n\n\n[1]: navark4@unlv.nevada.edu\n\n[2]: https://www.theatlantic.com/newsletters/archive/2024/01/books-briefing-against-counting-books-new-year/677031/\n\n[3]: https://readinglist.app/",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}