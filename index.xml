<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Kevin Navarrete-Parra</title>
<link>https://kevinnavreteparra.github.io/kevin-quarto-blog/</link>
<atom:link href="https://kevinnavreteparra.github.io/kevin-quarto-blog/index.xml" rel="self" type="application/rss+xml"/>
<description>A place for my notes and thoughts on political science, data science, and research methods</description>
<generator>quarto-1.7.33</generator>
<lastBuildDate>Sun, 10 Aug 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Migrating to Quarto</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/migrating-to-quarto.html</link>
  <description><![CDATA[ 




<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Introduction</li>
<li>How I Migrated to Quarto</li>
<li>A Few Useful Features</li>
<li>Concluding Thoughts</li>
</ol>
</section>
<section id="introduction" class="level1">
<h1>Introduction <a name="section1"></a></h1>
<p>I feel like I’ve left this site sort of in disarray recently with next to no posts and multiple pages that have gone drastically long without necessary updates. I had resolved earlier this year to write more–and my dissertation doesn’t count–and a major part of that was going to be writing on this site. Unfortunately, writing was one of the first things that fell by the wayside as soon as I got busy, as usual.</p>
<p>Although my business level has in no way diminished this summer, I was recently inspired to try setting up a writing habit again. I saw <a href="https://nrennie.rbind.io/blog/hugo-quarto-website/">a post</a> by Nicola Rennie, a data scientist whose content I follow. She talked about the migration process from Hugo to Quarto and pointed to a few useful resources that could help with this move.</p>
<p>After reading the post, I figured migrating from my old website (which felt too complicated) wouldn’t be too hard. I also thought migrating would be a good way to start writing again–especially since working in Quarto is a lot easier than editing the MDX files in the previous website.</p>
</section>
<section id="how-i-migrated-to-quarto" class="level1">
<h1>How I Migrated to Quarto <a name="section2"></a></h1>
<p>I figured migrating to Quarto would be a whole ordeal because I’d have to convert all the MDX files to Quarto and figure out how the Quarto website structure works. But, thankfully, this project was the perfect way to try out something new: Claude Code! I’ve recently been playing around with it a little bit, but I didn’t have any meaty project to jump in with.</p>
<p>This was the perfect test case!</p>
<p>I began by having Claude index my old website using the <code>/index</code> command in the CLI tool. This generated a <code>CLAUDE.md</code> file in my old website, which contained contextual information for the old website. I did so so that the agent would have as much background knowledge as possible in its context window before beginning the migration. The file it generated ended up being pretty comprehensive. After reading through it, I got the impression that the model had a pretty nuanced understanding of my old website’s file structure.</p>
<p>I proceeded by prompting Claude to make a detailed markdown file that included a description of everything I’d need for the migration. I asked it to give me a breakdown of what I’d need to convert the MDX files into Quarto, what the new website’s file structure would look like, and what other steps I’d need to take outside the immediate coding tasks. I’m not too knowledgeable about how the DNS stuff works, nor do I know much about how to deploy a website.<sup>1</sup> I figured it would be good to have Claude also help me simplify the deployment pipeline as well, so I asked it to also help me migrate to GitHub Pages.</p>
<p>Once I had that migration guideline, I created a new folder, which contains my old website and a folder for my new one. I opened a new Claude Code agent in this folder and had it read the migration guide and execute everything that was doable without having it access my personal accounts online. As part of the instruction, I had the agent finish the task by generating a conversion report, where I had it detail everything that it did and did not do, what went right and what went wrong, as well as any suggestions for additional work I could do.</p>
<p>Conversion report in hand, I took some time to understand what the agent did. Frankly, it did a damn good job right off the bat. The file structure looked exactly like what the Quarto website recommends, and the posts migrated really well! From here, I rolled up my sleeves and started working on the GitHub implementation, on which Claude gave me some pointers. I also worked on making sure that the new website used the same URL as my old one, which was easier than I thought it would be.</p>
<p>Once I had a preliminary version working, I started working on the truly difficult part: the styling. This is where I struggle the most; I’m not good at colors. So, I looked online for a few professional-looking color palletes to get an idea of what I should do, and I also consulted a few data science blogs I’ve seen online.</p>
<p>I saw some really good stuff, but a lot of the websites I saw were too bright and colorful (not my style). So I figured I’d start with some basics. I know I like blue, and I figured I didn’t want too bright of a blue on this site, so I tried to find stuff that would go well with more of a navy blue. I ended up picking a few colors (#1A365D as a primary, #38B2AC for accents, and #F7FAFC for backgrounds) and I fed them to the model. I told it to start with those three and then make any suggestions based on that starting point.</p>
<p>And look at that, the model did a good job again. There’s still some aesthetic elements I want to fiddle with, but the agent did a good job overall! All I had to do was play around with the <code>.css</code> and <code>.scss</code> code for a little bit to fine tune whatever I didn’t like, but that wasn’t too hard.</p>
</section>
<section id="a-few-useful-features" class="level1">
<h1>A Few Useful Features<a name="section3"></a></h1>
<p>I mentioned a few reasons why I switched to Quarto in the introduction above. Now that I’ve switched, I’d like to add a few fun features that Quarto has that my previous website didn’t.</p>
<p>First, I can set the date key in the <code>YAML</code> to <code>today</code>, which automatically sets the date to today’s date. I remember I spent so much time trying to figure out how to do that in my previous website to no avail. This is one of my favorite parts of programming: I get to be lazy about unimportant things because I can make the computer do it instead!</p>
<p>Second, writing math just works better now. I always had issues with the MDX files when I’d write math equations because of how often I’d have to use <code>{}</code> in the <code>LaTeX</code> code. Whenever the MDX file detected brackets, I’d get an acorn error because the file thought I was trying to insert JavaScript code instead of writing math. This almost always resulted in errors unless I properly escaped the brackets–and sometime even when I properly escaped the brackets. Using Quarto, I can just write:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu%20=%20%5Cfrac%7B1%7D%7Bn%7D%20%5Csum%5E%7Bn%7D_%7Bi=1%7D%20x_i%0A"></p>
<p>without having to worry about those pesky rendering issues or website-breaking mistakes! I can’t emphasize enough how stoked I am about this.</p>
<p>Third, I now get to execute code inside my posts!<sup>2</sup> Now, if I want to showcase some R inside a blog post, for example, I can write the code AND display its output. For instance, see this quick implementation of the probability density function for the normal distribution:</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3">pdf_gauss <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) {</span>
<span id="cb1-4">    mu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(x)</span>
<span id="cb1-5">    sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(x)</span>
<span id="cb1-6">    const <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sigma))</span>
<span id="cb1-7">    quantiles <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb1-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(x)){</span>
<span id="cb1-9">        exp_term <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>((x[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mu)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sigma)</span>
<span id="cb1-10">        quantiles <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(quantiles, const <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(exp_term))</span>
<span id="cb1-11">    }</span>
<span id="cb1-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(quantiles)</span>
<span id="cb1-13">}</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pdf_gauss</span>(x))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/migrating-to-quarto_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<p>As you can see, there’s a plot now! And it looks bell shaped!</p>
</section>
<section id="concluding-thoughts" class="level1">
<h1>Concluding Thoughts <a name="section4"></a></h1>
<p>This was a lot of fun! I finally got to play around with an agentic AI for a day, and I feel like a got a pretty decent result. I’m pleasantly surprised by the work that it did and I feel like I’m in a much stronger position with regard to my personal website. I’ve got more control over it; I finally have a repository that makes more sense to me.</p>
<p>I’m excited to keep playing with AI agents, and I’m hoping that this conversion sparks a more robust writing habit!</p>


<!-- -->

</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>My old website was hosted on Vercel, which I was only able to figure out with my friend, Luis’s, help.↩︎</p></li>
<li id="fn2"><p><code>R</code> and <code>Python</code> code, that is, not <code>JavaScript</code>. See the second point, about brackets in math equations.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Quarto</category>
  <category>Code</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/migrating-to-quarto.html</guid>
  <pubDate>Sun, 10 Aug 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Writing on Watches</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/horology/writing-on-watches.html</link>
  <description><![CDATA[ 




<p>I resolved at the turn of the year to write more, which I did for all of three or four weeks before I began to falter. From the outset, I settled on writing about my academic life–which I’m still interested in doing–because I thought it would be a good way to continue having material about which I could write on a weeklyish basis. When I set out to do this, I couldn’t think of much else to write about, though to be fair, I didn’t think too hard about what I could write.</p>
<p>Now that my prospectus defense is done and I’m ABD (finally), I’ve been trying to think of other things I could write. The most obvious path is to keep writing about my academic life, perhaps expanding the topic to include things I’m learning about machine learning, international investment law, and other topics I’m pursuing. But I like other stuff too. It doesn’t all have to be about school.</p>
<p>Fortunately, I’ve been thinking a lot about watches recently. I’ve had a tiny collection for a while now, and I’ve been meaning to expand it, but other things keep getting in the way. So a good step to accomplish both goals–writing and expanding my watch collection–is to write about watches. Here I can find a topic that readily interests me while also developing a hobby. And goodness knows, I need more hobbies these days.</p>
<p>I’m writing this inaugural post more to collect my thoughts than anything else. A game plan of sorts. If I’m going to write about watches, I’d like to have something of a plan I can loosely follow. As much as I love watches, I don’t think I could keep up a weekly schedule just on this, so I don’t want to start off with a lofty, albeit unrealistic, goal. As such, I won’t aim to write about watches on a schedule. Instead, I’ll write something here and there, whenever I buy a new watch or whenever I have something to say about a watch I already own.</p>
<p>I think I’ll start with a post about the most recent watch I purchased, and 1948 Pobeda manufactured in the post-war Soviet Union. I’ve loved Russian watches for a while now and I’ve wanted to add some to my collection for as long as I can remember. This will be my first Russian watch, and, as I’ll probably elaborate on when I write about it after it arrives, its history is exciting and fascinating. I can’t wait for it to arrive.</p>
<p>I’d also like to take some deep dives into the history of watchmaking, particularly in the Soviet Union. I’ve read a bit about it, and I’ve pieced together a rough timeline of the major events in Soviet watchmaking, but I’d like to delve deeper into the subject–especially as it relates to the pieces that I intend to buy.</p>
<p>I would also like to learn some more about what makes a watch tick. I know some basics about mechanical movements, but I typically end up forgetting anything more technical I learn within a few days. I think here I’ll take a similar approach to what I’ve done to learn statistics and machine learning: whatever I want to learn I’ll break apart first, then put back together. I know there are a few watchmaking sets I can buy online that come with detailed instructions about putting together a simple movement. Another good option would be to just buy some cheap movements–maybe an NH35 or a Miyota–and take them apart. If I can successfully put them back together, then I’ll know I’ve learned something that’ll stick.</p>
<p>I think that’ll be a good start. Broadly, I have three goals:</p>
<ol type="1">
<li>Write about the watches I own and the watches I buy.</li>
<li>Learn more about the history of watchmaking, particularly in the Soviet Union, and write about it.</li>
<li>Learn more about how watches work and write about my experiences learning.</li>
</ol>
<p>All three of which I think will be fun and interesting for me to pursue. I’m not putting any pressure on myself to write on a schedule–at least not about watches–so I think I can keep this up more readily. I’ll try to write about other stuff too.</p>


<!-- -->


 ]]></description>
  <category>Horology</category>
  <category>Writing</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/horology/writing-on-watches.html</guid>
  <pubDate>Thu, 06 Mar 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Notes on Probability Axioms</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/probability_axioms.html</link>
  <description><![CDATA[ 




<section id="probability-axioms" class="level1">
<h1>Probability Axioms</h1>
<p>These are some quick notes on probability axioms for future reference.</p>
<p>Let <img src="https://latex.codecogs.com/png.latex?%5COmega"> be the sample space, <img src="https://latex.codecogs.com/png.latex?F"> be the event space, and <img src="https://latex.codecogs.com/png.latex?P"> be the probability measure, with <img src="https://latex.codecogs.com/png.latex?(%5COmega,%20F,%20P)"> being a probability space. The probability of some event <img src="https://latex.codecogs.com/png.latex?P(E)"> is the probability of some event <img src="https://latex.codecogs.com/png.latex?E"> occurring.</p>
<p>Boiling this down to simpler terms, the sample space <img src="https://latex.codecogs.com/png.latex?%5COmega"> is the set of all possible outcomes. So, if I am flipping a coin,</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5COmega%20=%20%5C%7BH,%20T%5C%7D%20"></p>
<p>because heads and tails are the only possible outcomes. The event space <img src="https://latex.codecogs.com/png.latex?F"> is all the possible sets of outcomes that can occur. Keeping with the coin flip example,</p>
<p><img src="https://latex.codecogs.com/png.latex?%20F%20=%20%5C%7B%5Cemptyset,%20%5C%7BH%5C%7D,%20%5C%7BT%5C%7D,%20%5C%7BH,%20T%5C%7D%5C%7D%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cemptyset"> is the empty set, <img src="https://latex.codecogs.com/png.latex?%5C%7BH%5C%7D"> is the event of flipping heads, <img src="https://latex.codecogs.com/png.latex?%5C%7BT%5C%7D"> is the event of flipping tails, and <img src="https://latex.codecogs.com/png.latex?%5C%7BH,%20T%5C%7D"> is the event of flipping either heads or tails.</p>
<section id="axiom-1-non-negativity" class="level2">
<h2 class="anchored" data-anchor-id="axiom-1-non-negativity">Axiom 1: Non-Negativity</h2>
<p>The first axiom stipulates the non-negativity of the probability measure for events <img src="https://latex.codecogs.com/png.latex?E"> in the event space <img src="https://latex.codecogs.com/png.latex?F">. That is,</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(E)%20%5Cin%20%5CR%20,%20P(E)%20%5Cgeq%200%20%5Cforall%20E%20%5Cin%20F%20"></p>
<p>In simple terms, this axiom states that the probability of an event occurring is always a real number greater than or equal to zero for all events in the event space.</p>
</section>
<section id="axiom-2-unit-measure" class="level2">
<h2 class="anchored" data-anchor-id="axiom-2-unit-measure">Axiom 2: Unit Measure</h2>
<p>The second axiom states that the probability of the entire sample space <img src="https://latex.codecogs.com/png.latex?%5COmega"> is equal to 1. That is,</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(%5COmega)%20=%201%20"></p>
<p>which, in simple terms, means that the probability of at least one event from the event space occurring is 1.</p>
</section>
<section id="axiom-3-countable-additivity" class="level2">
<h2 class="anchored" data-anchor-id="axiom-3-countable-additivity">Axiom 3: Countable Additivity</h2>
<p>The third axiom states that the probability of the union of disjoint events is equal to the sum of the probabilities of the individual events. That is,</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(%5Cbigcup_%5C%7Bi=1%5C%7D%5E%5C%7B%5Cinfty%5C%7D%20E_i)%20=%20%5Csum_%5C%7Bi=1%5C%7D%5E%5C%7B%5Cinfty%5C%7D%20P(E_i)%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?E_i"> are disjoint events in the event space <img src="https://latex.codecogs.com/png.latex?F">. In simpler terms, this axiom states that the probability of the union of two or more events is equal to the sum of the probabilities of the individual events. And, by disjoint events, I mean that the events are mutually exclusive; that is, they don’t share any common elements.</p>
</section>
</section>
<section id="consequences-of-the-axioms" class="level1">
<h1>Consequences of the Axioms</h1>
<p>The probability axioms lead to some notable consequences that are also worth mentioning.</p>
<p>For example,</p>
<p><img src="https://latex.codecogs.com/png.latex?%20if%20A%20%5Csubseteq%20B,%20then%20P(A)%20%5Cleq%20P(B)%20"></p>
<p>which means that if event <img src="https://latex.codecogs.com/png.latex?A"> is a subset of event <img src="https://latex.codecogs.com/png.latex?B">, then the probability of event <img src="https://latex.codecogs.com/png.latex?A"> occurring is less than or equal to the probability of event <img src="https://latex.codecogs.com/png.latex?B"> occurring.</p>
<p>Another consequence is that</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(%5Cemptyset)%20=%200%20"></p>
<p>which means that the probability of the null set is zero.</p>
<p>The complement of an event <img src="https://latex.codecogs.com/png.latex?A"> is denoted as <img src="https://latex.codecogs.com/png.latex?A%5Ec">, and the probability of the complement of an event is</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(A%5Ec)%20=%20P(%5COmega%20-%20A)%20=%201%20-%20P(A)%20"></p>
<p>which gives the helpful interpretation that the probability of the complement of an event is equal to one minus the probability of the event itself.</p>
<p>Additionally, probabilities are bounded such that</p>
<p><img src="https://latex.codecogs.com/png.latex?%200%20%5Cleq%20P(E)%20%5Cleq%201%20%5Cforall%20E%20%5Cin%20F%20"></p>
<p>which means that the probability of any event <img src="https://latex.codecogs.com/png.latex?E"> is always between zero and one.</p>
<p>Finally, the probability of the union of two events is</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(A%20%5Ccup%20B)%20=%20P(A)%20+%20P(B)%20-%20P(A%20%5Ccap%20B)%20"></p>
<p>which simplifies to</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(A%20%5Ccup%20B)%20=%20P(A)%20+%20P(B)%20"></p>
<p>if the events <img src="https://latex.codecogs.com/png.latex?A"> and <img src="https://latex.codecogs.com/png.latex?B"> are mutually exclusive.</p>


<!-- -->

</section>

 ]]></description>
  <category>Notes</category>
  <category>Probability</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/probability_axioms.html</guid>
  <pubDate>Mon, 03 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Convert a Quarto Reveal.js Deck to PDF</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/quarto-deck-to-pdf.html</link>
  <description><![CDATA[ 




<p>My favorite way to make slide decks is to use <a href="https://quarto.org/">Quarto</a>, which is a Markdown-based document processor that allows you to create documents in a variety of formats using the simple Markdown typesetting language. One feature that I utilize more often than any other is its ability to create slide decks using the Reveal.js framework in a simple and straightforward way. Usually, I’ll publish these decks to Quarto Pub, which freely and simply hosts my slides online, and which makes it possible to easily share a link to the presentation for others to view more conveniently.</p>
<p>Despite the convenience of Quarto for my deck-making needs, I’ve found that I’m occasionally dissatisfied whenever I need to export them to PDF. I know that I can open the deck in the browser, press <code>e</code> to enable export mode, and print the document using my browser’s print dialog, but I’ve found that the resulting PDFs don’t often look how I’d like. For instance, recently the PDF I generated in this way had too much of a margin, which ate up some footnotes,<sup>1</sup> and the deck saved as entirely white with black text, despite the Reveal.js theme I was using.</p>
<p>After some quick searching, I found a neat alternative that I thought I’d share here so I remember it in the future. If you download the <code>decktape</code> npm package, you can easily convert your Quarto Reveal.js deck to a PDF using the following command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">npm</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> decktape</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">decktape</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>URL to your Quarto Reveal.js deck<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>output file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>.pdf</span></code></pre></div>
<p>In my case, I provided a URL to the Quarto Pub link where my deck was hosted, and the command generated a PDF that looked exactly like the deck I had created in Quarto. I was very pleased with the result, and I’ll definitely be using this method in the future.</p>


<!-- -->



<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I even tried messing with the margins in the print dialog, but it didn’t help.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Quarto</category>
  <category>Bash</category>
  <category>PDF</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/quarto-deck-to-pdf.html</guid>
  <pubDate>Mon, 27 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>The Spring 2025 Semester Kicks Off</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/phd/spring-2025-kickoff.html</link>
  <description><![CDATA[ 




<p>This week marks the official start of the Spring 2025 semester, which for me will hopefully be the semester in which I become ABD<sup>1</sup>. I spent a good chunk of this week working on the slide deck for that defense and I’m feeling pretty good about it. However, the most notable thing that happened this week was the number of students who came by my office to ask for help with their work. I should note that this is not some random occurrence, but rather the result of my position in the department as the methods TA–the designated person to help graduate and undergraduate students with any research and methods-related questions they might have.</p>
<p>Part of the attendance I got came about due to my class introductions where I dropped by most methods-related courses to introduce myself and let students know that I’m available to help them with their work. Most of the students I got to help were graduate students, though, most of whom came by to pick up on conversations we had had last semester. It makes me happy to see students coming by to utilize the resources available to them, and I’m glad attendance has already picked up faster than it did last semester.</p>
<p>One of the greatest pleasures I get from helping these students comes from how their questions make me think about my own work and what I’ve learned. I find that it’s easy to take certain bits of information for granted, whether that be due to the implicit assumptions one makes or the fact that it’s near-impossible to adequately question every element of a given topic. However, when I get these students in my office, I find that their questions often force me to think about statistics or programming in a different way or to fundamentally questions why I do something in some way–even if I know that way is correct.</p>
<p>A good example of this came yesterday when I had a student ask me about some code I had helped him write. It was a chunk of R code that took a data frame, did some minor cleaning operations, generated some descriptive statistics, and ultimately displayed the result as a <code>kable</code> in R. For tasks such as that, I’ll usually begin with the data frame object and pipe through the requisite steps before displaying the table, with a major reason for that being my desire to avoid intermediate object assignment. However, the student asked me what the <code>%&gt;%</code> operator was and how it worked. Now, ignoring any debates one might encounter from R programmers or the tidyverse, I’ve often found that students who are new to R or programming in general have a hard time with the pipe operator–at least if the instructor didn’t begin with it when teaching the language. And, thinking back to my experience learning R, I can’t say I was any different; I remember more or less understanding what the pipe did without really having the intuition to use it in my own code.</p>
<p>So, I took a moment to explain the pipe operator to the student, showing him how you can use it to pass the object as an argument to subsequent functions. I also showed him the alternative to the pipe operator, which involves plenty of intermediate assignment and, in my view, makes the code harder to read. I think he understood what I was talking about, but the experience made me reflect on how I should model programming practices to students that come by. I don’t think it’s as helpful to help students write code (say, for a descriptive statistics table or data cleaning operation) if I’m going to do so by adding to the conceptual load they’re already carrying. For instance, if students are already struggling with cleaning a variable in their data frame, the goal here is that they learn <em>how</em> to do so, not necessarily to teach them the way that I do it. By including the pipe operator, or any other element of the tidyverse, for that matter, I’m making their lives harder if their instructor didn’t begin with the intention to teach them this side of R programming.</p>
<p>One of the most repeated lessons I’ve gotten when going through teaching training had to do with the importance of scaffolding in the classroom. In other words, an effective pedagogical approach begins with first principles and iteratively builds upon them until the student can be expected to grasp the more complex concept that makes up the course’s end goal. If, then, the students I’m encountering aren’t exposed to the tidyverse view of the world–which I have on good authority is the case–then I should be careful not to complicate matters by introducing them to something to which they’ve had no exposure. The alternative is to force them to learn something that they don’t need to know at the moment, which can frustrate them and ultimately lead to a greater attrition rate in the course.</p>
<p>As a tutor, I have an obligation to help students learn the material in an effective manner. This means that I should avoid laziness in my approach; I should make sure that I’m not just giving them the answer that is the most readily available to me or the easiest to explain. I should consider what they know, to what point they’ve been scaffolded, and what they need to know to get to the next level. With that information in mind, I can then help them learn the material in a more effective manner, thereby minimizing the frustration they might feel and increasing the likelihood that they’ll come back for more help in the future. In the end, what’s the use of a tutor who gives the right answer if the student doesn’t understand it or can’t replicate it on their own?</p>


<!-- -->



<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>ABD stands for “All But Dissertation.” It’s a term used to describe a PhD candidate who has completed all of the requirements for their degree except for the dissertation. In my program, this means that I’ll have defended my prospectus, passed my two comprehensive exams, and completed all of my degree’s necessary coursework.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>PhD</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/phd/spring-2025-kickoff.html</guid>
  <pubDate>Sat, 25 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>I Just Finished My Prospectus</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/phd/finished-prospectus.html</link>
  <description><![CDATA[ 




<p>A part of me wants to start writing more things that aren’t academic. I’d like to write about what’s on my mind or about things that I find interesting–even if nobody is reading–but my degree progression consumers so much time that I rarely get the chance to do so. Starting this year, I’d like to make an effort to change that. Like I said, even if nobody is reading what I’m writing. I think it would be fun for posterity, and engaging in this type of writing might help me think more clearly about what I’m doing in the aggregate, which can be challenging when pushing through everything, one day at a time.</p>
<p>To that end, I think a good starting point is to try to write somewhat regularly about my progress through the PhD program–maybe about what I feel I’ve accomplished or learned in a given week. Now, I’m well aware that I said I want to write things that aren’t academic, and that what I’m proposing here is to write about the part of my life that is academic. But come on, I’ve got to start somewhere, and I think that writing sort of informally about what’s going on in this part of my life is distant enough from the academic writing I’m doing for my degree that I can scratch that writing itch I have.</p>
<p>With that house keeping out of the way, I just finished my prospectus yesterday. I felt pretty good about hitting that milestone. I’m well aware that this is only one part of a two-step process that is a prospectus defense, so I know I’m not out of the woods yet. Nevertheless, it felt good to get that document written and out of the way and sent to my committee. I’ve also gotten responses from all of my committee members regarding the defense date; it’s looking like we’ll be meeting at the end of January. The exact time is uncertain at this point–I still have to hear back from one of my committee members’ administrative assistant about his schedule–but I’m eager for my work to make it through that first crucible. I know my four committee member won’t go easy on me, and I’m confident their comments will be biting, but incredibly insightful and constructive.</p>
<p>Having finished my prospectus, I’m struck by a feeling that has been relatively common throughout my degree progression. There’s this almost necessary level of solitude that pervades most aspects of my degree progression. I’m not saying that there aren’t people around to talk with about my work or that I don’t have a support system–I’d say quite the opposite is true, in fact. No, there is a solitude that comes in the moment of rejoicing in the completion of a task. I can tell my friends and family that I did this thing, and I can talk to any number of people about everything that went into what I’ve done. And they’ll all express their congratulations or their well wishes, which is nice. But I can’t escape this feeling of solitude that comes about following a task’s completion.</p>
<p>Now, I’m not saying that nobody understands what I’m doing or that nobody can relate. Everyone in my life understands and they all relate to most, if not all, I’m going through here. This is especially the case with my friends in the program, who are quite literally undergoing the same experience. After all, undertaking a PhD is not so substantively different from other types of work that it’s impossible or even difficult to relate to.</p>
<p>I think the feeling of solitude comes from how much of myself I’ve put into my research, how much of my time and how many of my thoughts I’ve dedicated to this endeavor so far. And this goes for the prospectus, of course, but also for the broader undertaking as a whole, including my coursework, research, conference travel, and anything else that can be reasonably included under my degree progression umbrella.</p>
<p>I spend most of my time thinking about this project, the data I’ll keep collecting, and helpful code I can write to make the process more efficient. I’ll think about potential article ideas and about moves I can make to add another line to my CV. I think I’ve trapped myself, thinking constantly in terms of me and what I can and should do next. When it comes to rejoicing in a tangible accomplishment, I can’t help but default to the same mindset: solitude resulting from the single-minded need to succeed.</p>
<p>Despite the solitude, I don’t necessarily see a message of sadness in this. What I said above may be the case, but I nevertheless feel excited for what will come next. It does bring me joy to share my accomplishment with my friends and family, and I am earnestly looking forward to what my committee will say about where my research is heading. I also feel this underlying sense that I’m exactly where I’ve always wanted to be doing precisely what I’ve always wanted to do–even if I never could have imagine the granular details of what I’m doing now. Not only am I happy in the moment, I am content with the aggregate of my experiences so far, which I think is far more challenging to achieve.</p>
<p>Now that this prospectus is done, I have plenty to be happy about, plenty to be thankful for. I am motivated to keep pushing. And, importantly, I’m looking forward to my defense, which will be the next step in this long journey. I hope I get to write about a successful defense soon.</p>


<!-- -->


 ]]></description>
  <category>PhD</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/phd/finished-prospectus.html</guid>
  <pubDate>Sat, 18 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>LaTeX Issue Fix: No , , or commands</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/latex-citation-bibdata-bibstyle-issue.html</link>
  <description><![CDATA[ 




<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Introduction</li>
<li>The Solution</li>
<li>Conclusion</li>
</ol>
</section>
<section id="introduction" class="level1">
<h1>Introduction <a name="section1"></a></h1>
<p>I recently ran into a pesky LaTeX error that I had never seen before. After looking through Stack Exchange and other forums, I found others with similar issues, but none of the solutions were applicable to my case or seemed to work.<sup>1</sup></p>
<p>While writing my prospectus, I was compiling my document and received the following error message:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">The</span> top-level auxiliary file: prospectus.aux</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">I</span> found no <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\\</span>citation commands---while reading file prospectus.aux</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">I</span> found no <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\\</span>bibdata command---while reading file prospectus.aux</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">I</span> found no <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\\</span>bibstyle command---while reading file prospectus.aux</span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">There</span> were 3 error messages<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>Which was strange because my preamble contained the following:<sup>2</sup></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode latex code-with-copy"><code class="sourceCode latex"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\documentclass</span>[authordate]{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">turabian-thesis</span>}</span>
<span id="cb2-2"></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>[utf8]{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">inputenc</span>}</span>
<span id="cb2-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">csquotes, ellipsis</span>}</span>
<span id="cb2-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">graphicx</span>}</span>
<span id="cb2-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>[capposition=top]{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">floatrow</span>}</span>
<span id="cb2-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">acro</span>}</span>
<span id="cb2-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">longtable</span>}</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">amsmath</span>}</span>
<span id="cb2-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">amssymb</span>}</span>
<span id="cb2-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">amsfonts</span>}</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">array</span>}</span>
<span id="cb2-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">url</span>}</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>[breaklinks=true,colorlinks,citecolor=blue]{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">hyperref</span>}</span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\setcounter</span>{tocdepth}{2}</span>
<span id="cb2-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>[pass, letterpaper]{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">geometry</span>} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% for margins</span></span>
<span id="cb2-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>[backend=biber]{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">biblatex-chicago</span>} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% for bibliography</span></span>
<span id="cb2-23"></span>
<span id="cb2-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\bibliography</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">works-cited.bib</span>}</span></code></pre></div>
<p>so it clearly wasn’t that I was missing the necessary packages, nor was it that I was missing the <code>\bibliography{}</code> command. Now, I didn’t have any citations in the <code>prospectus.tex</code> file, but that couldn’t be the issue because I had plenty of citations in the <code>.tex</code> files for each of my chapters, which were all included in the <code>prospectus.tex</code> file using the helpful <code>\include{}</code> command. I also didn’t think I needed a <code>\bibliographystyle{}</code> command because I was using <code>biblatex-chicago</code>, which I thought would take care of that for me. Moreover, I had never had this issue before despite never using a <code>\bibliographystyle{}</code> command in any of my previous documents using <code>biblatex-chicago</code>.</p>
<p>For an idea of what my document structure looked like, here’s a truncated map of my working directory:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">final/</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> introduction/</span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── introduction.tex</span>
<span id="cb3-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> chapter-1/</span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── chapter-1.tex</span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> chapter-2/</span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── chapter-2.tex</span>
<span id="cb3-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> chapter-3/</span>
<span id="cb3-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── chapter-3.tex</span>
<span id="cb3-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> media/</span>
<span id="cb3-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> prospectus.tex</span>
<span id="cb3-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> works-cited.bib</span>
<span id="cb3-13"></span></code></pre></div>
<p>Although the issue was certainly annoying (I can’t stand to see error messages when I compile my documents), this problem wasn’t a genuine impediment. After all, my document was still compiling, despite the errors, and it consistently looked the way I wanted it to. I had all but given up on the issue until it just went away on its own. I love it when that happens!</p>
</section>
<section id="the-solution" class="level1">
<h1>The Solution <a name="section2"></a></h1>
<p>After some digging, I found that the issue was likely due to the fact that I had an active chapter file with no citations in it. This chapter was the last one left to write, and I hadn’t gotten around to adding anything to it for a while, meaning that it was just an empty <code>.tex</code> file with a <code>\chapter{}</code> command in it. When I got closer to starting it, I added some sections and subsections to it in anticipation of writing the content, likely resulting in this error. I say likely because I was making a lot of changes to the document at the time, resulting in a plethora of possible reasons for the error.</p>
<p>The solution was simple: I added a citation to the chapter file, and the error went away.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion <a name="section3"></a></h1>
<p>A conclusion might seem silly for a post like this one, but I’d like to take a moment to reflect on the issue. I think it’s important to remember that LaTeX is a powerful tool that can be finicky at times. It’s easy to get frustrated when you run into an error message that you’ve never seen before, but it’s important to remember that there are often simple solutions to these problems. In this case, the solution was as simple as adding a citation to a chapter file.</p>
<p>More importantly, I learned that I shouldn’t get ahead of myself while writing LaTeX documents with complicated structures. I should take my time and simply work on the document one step at a time, focusing solely on the task at hand. I didn’t need to add an empty chapter to the document, nor did I need to add sections and subsections to it before I was ready to write the content. I seem to have a habit of doing this–especially when writing LaTeX–and I often end up relearning this lesson the hard way and in different contexts. LaTeX can sure be fickle sometimes, but it sure is fun!</p>
<p>If this solution doesn’t work for you or you have a different solution, please let me know and I’ll be more than happy to add it to the post.</p>


<!-- -->

</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>If you’d like to see the other proposed solutions, see <a href="https://tex.stackexchange.com/questions/294916/i-found-no-citation-bibdata-bibstyle-commands-in-error-in-texmaker-or-biblate">this Stack Exchange thread that suggested a fresh Biber install</a> and <a href="https://tex.stackexchange.com/questions/107132/no-citation-bibdata-bibstyle-commands">this one that suggested a fresh compile process</a>. Neither solution was particularly helpful in my case because the issue persisted after I tried them.↩︎</p></li>
<li id="fn2"><p>Please don’t judge my package load order too harshly! I’m sure there’s something I could do to make it more efficient or potentially less problematic, but I haven’t made the time to do so at the time of writing.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>LaTeX</category>
  <category>bibliography</category>
  <category>citations</category>
  <category>biblatex</category>
  <category>troubleshooting</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/latex-citation-bibdata-bibstyle-issue.html</guid>
  <pubDate>Fri, 03 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Convert a LaTeX Document to a DOCX File</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/tex-to-docx.html</link>
  <description><![CDATA[ 




<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Introduction</li>
<li>Setup</li>
<li>Conversion</li>
<li>A Note on Complex Tables*</li>
<li>Conclusion</li>
</ol>
</section>
<section id="introduction" class="level1">
<h1>Introduction <a name="section1"></a></h1>
<p>I found myself needing to convert <code>.tex</code> documents into Word documents recently, so I sought out a solution that would mean I could avoid manually copying and pasting from one document to the other (which is a pain). While looking for a solution online, I saw a few suitable methods, each with their own minor drawbacks.</p>
<p>A simple solution is to simply open a <code>.pdf</code> file in Word, which will then convert the document to something editable in the word processor. However, this method often leads to some finicky formatting issues that I’d rather avoid. On top of that, something always feels off about those conversions. I can’t quite put my finger on it–it’s as if there is a formatting uncanny valley that continually throws me off.</p>
<p>There are other solutions, like tex2rtf, which can convert the base file into a rich text format that Word can read. However, I wasn’t a fan of this one for a few reasons. First, the program installation was a bit of a pain. More importantly, the formatting was still a little off!</p>
<p>Pandoc, however, does a pretty good job of converting between the two formats–especially if you have a solid reference doc you can use to ensure the formatting is consistent. Additionally, I was already a little familiar with Pandoc due to my extensive experience with Markdown and RMarkdown, so I figured I’d give it a shot.</p>
</section>
<section id="setup" class="level1">
<h1>Setup <a name="section2"></a></h1>
<p>Before you can convert a LaTeX document to a DOCX file, you’ll need to have a few things in place. First, you’ll need to have Pandoc installed on your machine. If you don’t have it installed, you can download it from the <a href="https://pandoc.org/installing.html">Pandoc website</a>.</p>
<p>If you’re on a Mac and already have Homebrew installed, then just run:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install pandoc</span></code></pre></div>
<p>which will run through the process for you automatically.</p>
<p>In addition to the local Pandoc installation, you’ll want:</p>
<ul>
<li>A LaTeX document to convert;</li>
<li>A reference <code>.docx</code> file to ensure the formatting is consistent;</li>
<li>A <code>.bib</code> file if you’re using citations in your document; and</li>
<li>Your terminal open and ready to go.</li>
</ul>
</section>
<section id="conversion" class="level1">
<h1>Conversion <a name="section3"></a></h1>
<p>Before I get into the specifics, I should note that I’m using a Mac for this process. If you come across any problems on Windows or Linux, you might need to adjust the commands slightly.</p>
<p>To convert my <code>.tex</code> file to a <code>.docx</code> file, I first navigated to the directory from which I’d like to operate.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /path/to/your/directory</span></code></pre></div>
<p>Once in, I ran the following command:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pandoc</span> document/name.tex <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-2">--citeproc  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--bibliography</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>works-cited.bib <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-3">-o document/name.docx <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-4">--reference-doc <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Turabian Style Research paper.docx"</span></span></code></pre></div>
<p>This command does a few things:</p>
<ul>
<li>It begins by calling the <code>pandoc</code> command, which will convert the document;</li>
<li>It specifies the <code>.tex</code> file you’d like to convert, which in this case is a file called <code>name.tex</code> in the <code>document/</code> directory;</li>
<li>It tells Pandoc to use the <code>citeproc</code> filter to handle citations, which is necessary if you’re using a <code>.bib</code> file;</li>
<li>It specifies the <code>.bib</code> file you’re using for citations using the <code>--bibliography</code> flag;</li>
<li>It tells Pandoc to output (<code>-o</code>) the file as a <code>.docx</code> file, which will be named <code>name.docx</code> in the <code>document/</code> directory; and</li>
<li>It specifies the reference document you’d like to use to ensure the formatting is consistent.</li>
</ul>
<p>In this case, I’m using a Turabian-style research paper as my reference document, but you could use any <code>.docx</code> file you’d like.</p>
</section>
<section id="a-note-on-complex-tables" class="level1">
<h1>A Note on Complex Tables* <a name="section4"></a></h1>
<p>One of the issues I’ve run into with this process is that Pandoc doesn’t always do a good job at handling tables–especially complex ones. If you have a table that’s more than just a simple grid, you might run into some issues with the conversion. Namely, the table just won’t appear in the converted Word document.</p>
<p>After some digging, I found that the best way to handle this issue is to convert the table to an image and then insert the image into the Word document. While this is more of a workaround than a true solution, it gets the job done and ensures that the output document looks the way you want it without too much hassle.</p>
<p>By complex tables, I’m referring to something along these lines, which includes table notes and a resize box command:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode latex code-with-copy"><code class="sourceCode latex"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">threeparttable</span>}</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">graphicx</span>}</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">document</span>}</span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">table</span>}[th]</span>
<span id="cb4-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\centering</span></span>
<span id="cb4-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\resizebox</span>{<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textwidth</span>}{!}{<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span></span>
<span id="cb4-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">threeparttable</span>}</span>
<span id="cb4-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\caption</span>{Variable Descriptions}</span>
<span id="cb4-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\label</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tab:variables</span>}</span>
<span id="cb4-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tabular</span>}{l p{5cm} l l l}</span>
<span id="cb4-12">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\hline</span></span>
<span id="cb4-13">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Variable} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Description} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Hypothesis} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Direction} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Source} <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb4-14">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\hline</span></span>
<span id="cb4-15">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\multicolumn</span>{5}{l}{<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\emph</span>{Dependent Variable}} <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span></span>
<span id="cb4-16">        Variable A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> -- <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> -- <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 1 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb4-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\hline</span></span>
<span id="cb4-18">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\multicolumn</span>{5}{l}{<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\emph</span>{Independent Variables}} <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span></span>
<span id="cb4-19">        Variable B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$+$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 1 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb4-20">        Variable C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 1 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb4-21">        Variable D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 2 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb4-22">        Variable E <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable E <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 3 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb4-23">        Variable F <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable F <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 3 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb4-24">        Variable G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 3 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb4-25">        Variable H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 3 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span></span>
<span id="cb4-26">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\hline</span></span>
<span id="cb4-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tabular</span>}</span>
<span id="cb4-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tablenotes</span>}</span>
<span id="cb4-29">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\small</span></span>
<span id="cb4-30">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\item</span>[*] Placeholder note content for table details.</span>
<span id="cb4-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tablenotes</span>}</span>
<span id="cb4-32">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">threeparttable</span>}<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span></span>
<span id="cb4-33">    }</span>
<span id="cb4-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">table</span>}</span>
<span id="cb4-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">document</span>}</span></code></pre></div>
<p>The first step to converting this table to an image is to extract the table from the original <code>.tex</code> document and save it as a seperate <code>.tex</code> file that looks something like this:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode latex code-with-copy"><code class="sourceCode latex"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\documentclass</span>[border=10pt, varwidth]{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">standalone</span>}</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">threeparttable</span>}</span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">graphicx</span>}</span>
<span id="cb5-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">booktabs</span>}</span>
<span id="cb5-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lmodern</span>}</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">document</span>}</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">table</span>}[th]</span>
<span id="cb5-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\centering</span></span>
<span id="cb5-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\resizebox</span>{<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textwidth</span>}{!}{<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span></span>
<span id="cb5-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">threeparttable</span>}</span>
<span id="cb5-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\caption</span>{Variable Descriptions}</span>
<span id="cb5-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\label</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tab:variables</span>}</span>
<span id="cb5-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tabular</span>}{l p{5cm} l l l}</span>
<span id="cb5-16">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\hline</span></span>
<span id="cb5-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Variable} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Description} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Hypothesis} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Direction} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textbf</span>{Source} <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb5-18">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\hline</span></span>
<span id="cb5-19">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\multicolumn</span>{5}{l}{<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\emph</span>{Dependent Variable}} <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span></span>
<span id="cb5-20">        Variable A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> -- <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> -- <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 1 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb5-21">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\hline</span></span>
<span id="cb5-22">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\multicolumn</span>{5}{l}{<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\emph</span>{Independent Variables}} <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span></span>
<span id="cb5-23">        Variable B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$+$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 1 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb5-24">        Variable C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 1 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb5-25">        Variable D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 2 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb5-26">        Variable E <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable E <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 3 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb5-27">        Variable F <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable F <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 3 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb5-28">        Variable G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 3 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span> </span>
<span id="cb5-29">        Variable H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Placeholder description for variable H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> H4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$-$</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Source 3 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\\</span></span>
<span id="cb5-30">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\hline</span></span>
<span id="cb5-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tabular</span>}</span>
<span id="cb5-32">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tablenotes</span>}</span>
<span id="cb5-33">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\small</span></span>
<span id="cb5-34">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\item</span>[*] Placeholder note content for table details.</span>
<span id="cb5-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tablenotes</span>}</span>
<span id="cb5-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">threeparttable</span>}<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span></span>
<span id="cb5-37">    }</span>
<span id="cb5-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">table</span>}</span>
<span id="cb5-39"></span>
<span id="cb5-40"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">document</span>}</span></code></pre></div>
<p>Make sure to customize your preamble to match the necessary packages and formatting for your table.</p>
<p>In this new <code>.tex</code> document, I used the <code>standalone</code> document class to ensure that the table is the only thing on the page, facilitating the conversion to an image. Once compited using <code>pdflatex</code>, the table will be saved as a <code>.pdf</code> file.</p>
<p>Next, you’ll want to use a pdf to image converter to convert the <code>.pdf</code> file to a <code>.png</code> file. I found that the <code>imagemagick</code> package works well for this–especially since I can do everything from the command line without needing to open a separate program. If you don’t have this installed already, you can do so by running:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install imagemagick</span></code></pre></div>
<p>If you don’t already have the <code>ghostscript</code> package installed, you’ll need to install that as well since it’s a dependency for <code>imagemagick</code>. You can do so by running:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install ghostscript</span></code></pre></div>
<p>Once you have <code>imagemagick</code> installed, you can convert the <code>.pdf</code> file to a <code>.png</code> file by running:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">magick</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-density</span> 300 table.pdf <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-quality</span> 100 table.png</span></code></pre></div>
<p>which will output a <code>.png</code> file that you can call in your <code>.tex</code> file instead of the original table.</p>
<p>The <code>magick</code> command is the ImageMagick command line tool, which you can use to convert images from one format to another. The <code>-density</code> flag specifies the resolution of the image, and the <code>-quality</code> flag specifies the quality of the image. You can adjust these values as needed to get the desired output.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode latex code-with-copy"><code class="sourceCode latex"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\usepackage</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">graphicx</span>}</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">document</span>}</span>
<span id="cb9-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\begin</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">figure</span>}</span>
<span id="cb9-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\centering</span></span>
<span id="cb9-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\label</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fig:foo-table</span>}</span>
<span id="cb9-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">\includegraphics</span>[width=<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">\textwidth</span>]{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">images/table.png</span>}</span>
<span id="cb9-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">figure</span>}</span>
<span id="cb9-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">\end</span>{<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">document</span>}</span></code></pre></div>
<p>Make sure to adjust the path to the image directory as needed, of course, and ensure that any cross-references are updated to reflect the new table format.</p>
<p>After doing this, you can run the Pandoc command as usual, and the table will appear in the Word document as an image.</p>
<p>While this is a bit of a workaround, it’s a relatively quick process that ensures the table appears in the Word document as you’d like. Moreover, it has a positive externality, depending on how you look at it: it forces you to render tables on their own, meaning that you can fiddle with them in a more controlled environment without having to worry about rendering the rest of the document.<sup>1</sup></p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion <a name="section5"></a></h1>
<p>While this is still not a perfect solution, it’s a pretty good one. The formatting is consistent, and the process is relatively quick. If you’re looking to convert a LaTeX document to a Word document, I’d recommend giving Pandoc a shot. It’s a versatile tool that can handle a variety of conversions, and it’s relatively easy to use once you get the hang of it. And, most importantly, it doesn’t have that weird uncanny valley look that you might get with other conversion methods.</p>
<p><del>One issue I’m still having is that it isn’t doing a good job converting my LaTeX tables to Word tables. When I find a solution to this issue, I’ll be sure to update this post.</del></p>


<!-- -->

</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Regardless, I’d still prefer to have the table within the <code>.tex</code> document itself, rather than on its own. However, if you’re in the position of needing to convert a LaTeX document to a Word document, this is a solid workaround that gets the job done.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>LaTeX</category>
  <category>Word</category>
  <category>Code</category>
  <category>Pandoc</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/tex-to-docx.html</guid>
  <pubDate>Mon, 16 Dec 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Make a Bingo Card in R</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/bingo-in-r.html</link>
  <description><![CDATA[ 




<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Introduction</li>
<li>Creating the Bingo Card</li>
<li>Making a Bingo Card Generator</li>
</ol>
</section>
<section id="introduction" class="level1">
<h1>Introduction <a name="section1"></a></h1>
<p>I recently found myself wanting to make a few bingo cards for an election day game night with some friends. We had a list of options that would go on the cards, but we didn’t have a way to generate the cards themselves. I’m sure there’s a website out there that would do it easily, but I thought it would be fun to see if anyone has tried doing this in R. After all, you can make just about anything in <code>ggplot2</code>, so why not bingo cards?</p>
<p>I did a quick search and found some interesting code on R Bloggers that made things similar to bingo cards as well as an R package by Jenny Bryan and Dean Attali, the code for which can be found on <a href="https://github.com/jennybc/bingo?tab=readme-ov-file">GitHub</a>. However, I also found a <a href="https://qntkhvn.netlify.app/projects/bingo">simple blog post</a> by Quang Nguyen that provided a straightforward way to make bingo cards using <code>ggplot2</code>. I decided to use his code as a starting point for my bingo cards.<sup>1</sup></p>
</section>
<section id="creating-the-bingo-card" class="level1">
<h1>Creating the Bingo Card <a name="section2"></a></h1>
<p>The first step was to run Nguyen’s code to see what the bingo cards would look like. His original code is as follows:</p>
<pre><code>library(tidyverse)

# replace this with whatever you're interested in
str &lt;- letters

set.seed(1)
tibble(what = sample(str, 25),
       row = rep(1:5, 5),
       col = rep(1:5, each = 5)) %&gt;% 
  mutate(what = ifelse(row == 3 &amp; col == 3, 
                       "Free space", what)) %&gt;% 
  ggplot(aes(row, col)) +
  geom_tile(color = "black", fill = "white") +
  geom_text(aes(label = what)) +
  coord_fixed() +
  theme_void()</code></pre>
<p>The code ran well, generating a 5x5 plot with random letters in each cell. Morover, the center cell was labeled “Free space”, which is a useful feature. However, when I ran the code with my bingo card options, I found that the unformatted text was too large for the cells, leading to significant lack of readability. After some experimentation, I adjusted the font size, added some text wrapping, and updated some of the formatting to make the cards more to my liking.</p>
<p>The output looked like this:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kevinnavreteparra.github.io/kevin-quarto-blog/assets/images/messy-bingo.png" class="img-fluid figure-img"></p>
<figcaption>An example of a messy bingo card</figcaption>
</figure>
</div>
<p>As you can see, the card is fairly illegible, which is not ideal. However, after some tweaking, I was able to generate a card that looks like this:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kevinnavreteparra.github.io/kevin-quarto-blog/assets/images/clean-bingo.png" class="img-fluid figure-img"></p>
<figcaption>An example of a cleaned up bingo card</figcaption>
</figure>
</div>
<p>I used the <code>stringr</code> package to wrap the text and I added additional facets to the <code>ggplot2</code> code to make the cards more to my liking. Despite being quite pleased with the final product, I wanted to take things a step further by making a bingo card generating function I could use for future game nights.</p>
</section>
<section id="making-a-bingo-card-generator" class="level1">
<h1>Making a Bingo Card Generator <a name="section3"></a></h1>
<p>I started by wrapping the code above in a function that would take a character vector as an argument to fill the cells. As I progressed, though, I realized that I could make the function more flexible by allowing the user (in this case, me) to specify a series of arguments that would control the card’s appearance.</p>
<p>Ultimately, I ended up with the <code>make_bingo</code> function, which you can find in my <a href="https://github.com/KevinNavarreteParra/kevinsRepo?tab=readme-ov-file">personal utility package, <code>kevinsRepo</code></a>. The final product allows the user to specify the text wrapping, font size, and title, among other things. More importantly, it offers a simple, yet effective way to generate bingo cards for any occasion while adding a greater level of customization than the original code. To generate a test bingo card, simply run:</p>
<pre><code>devtools::install_github("KevinNavarreteParra/kevinsRepo")

library(kevinsRepo)

make_bingo(letters)</code></pre>
<p>I hope you find this function as useful as I do!</p>


<!-- -->

</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I did this instead of using the extand Shiny app provided by Jenny Bryan’s and Dean Attali’s <code>bingo</code> package because I wanted to have more granular control over the cards’ appearance.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Bingo</category>
  <category>Code</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/bingo-in-r.html</guid>
  <pubDate>Sun, 03 Nov 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Notes on Bayes’ Formula</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/bayes-formula.html</link>
  <description><![CDATA[ 




<p><em>I am writing these quick notes for my didactic purposes and to provide useful starting places for my peers in grad school. If you see that I have made a mistake or would like to suggest some way to make the post better or more accurate, please feel free to <a href="mailto:navark4@unlv.nevada.edu">email</a> me. I am always happy to learn from others’ experiences!</em></p>
<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Bayes’ Theorem</li>
<li>Going Through an Example</li>
</ol>
</section>
<section id="bayes-theorem" class="level1">
<h1>Bayes’ Theorem <a name="section1"></a></h1>
<p>Bayes’ Theorem is a fundamental concept in probability theory that allows us to update our beliefs about the probability of an event occurring given new information. The formula is written as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(A%7CB)%20=%20%5Cfrac%7BP(B%7CA)%20*%20P(A)%7D%7BP(B)%7D%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?P(A%7CB)"> is the probability of event A occurring given that event B has occurred, <img src="https://latex.codecogs.com/png.latex?P(B%7CA)"> is the probability of event B occurring given that event A has occurred, <img src="https://latex.codecogs.com/png.latex?P(A)"> is the prior probability of event A occurring, and <img src="https://latex.codecogs.com/png.latex?P(B)"> is the prior probability of event B occurring.</p>
<p>The formula can be interpreted as follows:</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(A%7CB)"> is the posterior probability of event A occurring given that event B has occurred.</li>
<li><img src="https://latex.codecogs.com/png.latex?P(B%7CA)"> is the likelihood of observing event B given that event A has occurred.</li>
<li><img src="https://latex.codecogs.com/png.latex?P(A)"> is the prior probability of event A occurring.</li>
<li><img src="https://latex.codecogs.com/png.latex?P(B)"> is the prior probability of event B occurring.</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?P(B)"> can be calculated as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(B)%20=%20P(B%7CA)%20*%20P(A)%20+%20P(B%7C%5Cneg%20A)%20*%20P(%5Cneg%20A)%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?P(%5Cneg%20A)"> is the probability of event A not occurring.</p>
</section>
<section id="going-through-an-example" class="level1">
<h1>Going Through an Example <a name="section2"></a></h1>
<p>Let’s go through an example to illustrate how Bayes’ Theorem can be used to update our beliefs about the probability of an event occurring given new information.</p>
<p>Suppose you have two servers, Server 1 and Server 2. Server 1 hosts 70% of the website traffic and Server 2 hosts the remaining 30%. Server 1 has a 98% uptime rate, while Server 2 has 96% uptime rate. A user reports that the website is down. What is the probability that the website is down because of Server 2?</p>
<p>Let’s define the events as follows:</p>
<ul>
<li>A: Server 1 hosts the website;</li>
<li>B: Server 2 hosts the website;</li>
<li>D: The website is down.</li>
</ul>
<p>We want to calculate <img src="https://latex.codecogs.com/png.latex?P(A%7CD)">, the probability that Server 1 hosts the website given that the website is down.</p>
<p>We can calculate <img src="https://latex.codecogs.com/png.latex?P(A%7CR)"> using Bayes’ Theorem as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(A%7CD)%20=%20%5Cfrac%7BP(D%7CA)%20*%20P(A)%7D%7BP(D)%7D%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?P(D%7CA)"> is the probability of the website being down given that Server 1 was hosting it, <img src="https://latex.codecogs.com/png.latex?P(A)"> is the prior probability of Server 1 hosting the site, and <img src="https://latex.codecogs.com/png.latex?P(D)"> is the prior probability of the site being down.</p>
<p>We can calculate <img src="https://latex.codecogs.com/png.latex?P(D%7CA)"> as the probability of the website being down given it’s hosted by Server 1 <img src="https://latex.codecogs.com/png.latex?.02">, and <img src="https://latex.codecogs.com/png.latex?P(A)"> as the prior probability of the website being hosted by Server 1, which is <img src="https://latex.codecogs.com/png.latex?.7">.</p>
<p>To calculate <img src="https://latex.codecogs.com/png.latex?P(D)">, we can use the law of total probability:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(D)%20=%20P(D%7CA)%20*%20P(A)%20+%20P(D%7CB)%20*%20P(B)%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?P(D%7CA)"> is the probability of the website being down given that it was hosted on Server 1, which is <img src="https://latex.codecogs.com/png.latex?.02">. <img src="https://latex.codecogs.com/png.latex?P(A)"> is the prior probability that the website was hosted on Server 1, which is <img src="https://latex.codecogs.com/png.latex?.7">. <img src="https://latex.codecogs.com/png.latex?P(D%7CB)"> is the probability of the website being down given that it was hosted on Server 2, which is <img src="https://latex.codecogs.com/png.latex?.04">, and <img src="https://latex.codecogs.com/png.latex?P(B)"> is the prior probability of the website being on Server 2, which is <img src="https://latex.codecogs.com/png.latex?.3">.</p>
<p>Substituting the values into the formula, we get:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(D)%20=%20.7%20*%20.02%20+%20.3%20*%20.04%20=%20.026%20"></p>
<p>Now we can substitute the values into the formula for <img src="https://latex.codecogs.com/png.latex?P(A%7CR)">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(A%7CR)%20=%20%5Cfrac%7B.02%20*%20.7%7D%7B.026%7D%20%5Capprox%200.5384615385%20"></p>
<p>Therefore, the probability that the website is down because of Server 1 is approximately <img src="https://latex.codecogs.com/png.latex?.54">.</p>


<!-- -->

</section>

 ]]></description>
  <category>Notes</category>
  <category>Bayes</category>
  <category>Formula</category>
  <category>Data Science</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/bayes-formula.html</guid>
  <pubDate>Sat, 21 Sep 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Make an R Project Template</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/r-project-template.html</link>
  <description><![CDATA[ 




<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Introduction</li>
<li>Setup</li>
<li>Project Function</li>
<li>Setting up the Metadata</li>
</ol>
</section>
<section id="introduction" class="level1">
<h1>Introduction <a name="section1"></a></h1>
<p>Standardizing a project template in R can be a great way to ensure consistency across projects–especially if you find yourself working on similarly structured projects frequently. In this post, I’ll briefly walk through how to set up a project template in the RStudio project template wizard.</p>
</section>
<section id="setup" class="level1">
<h1>Setup <a name="section2"></a></h1>
<p>Before you can make a project template, you’ll need a few things in place. First, you’ll need to have an r package through which you can access the project template. If you don’t have one, see the excellent <a href="https://r-pkgs.org/index.html">R Packages textbook</a> by Hadley Wickham and Jennifer Bryan, which thoroughly covers the process of creating your first R package. If you already have an R package, I’ll assume it follows the standard structure discussed in the book above. For instance, you should have an <code>R/</code> directory with all of your R scripts, a <code>man/</code> directory for your documentation, and, importantly for our purposes, an <code>inst/</code> directory for your project template. Moreover, as you’ll see below, I’m assuming you’re employing the <code>usethis</code>, <code>devtools</code>, and <code>roxygen2</code> packages to help you manage your package and its documentation.</p>
<p>The first thing you should do to set up, then, is create the following directory structure in your package: <code>{your-package}/inst/rstudio/templates/project/</code>. This structure will allow RStudio to find the necessary metadata to create your project template. While you’re in the <code>inst/</code> directory, it might be worthwhile creating a <code>extdata/</code> folder to store any data files you might want to pull into the project template. For instance, if you have a standard script or file you use in every project, you should store it in the <code>extdata/</code> folder for ease of access later on.</p>
</section>
<section id="project-function" class="level1">
<h1>Project Function <a name="section3"></a></h1>
<p>Now that you have everything set up, you should begin by writing the function you’ll call to create the project template. I’ll do this by creating a new R script in the <code>R/</code> directory of my package using the <code>use_r</code> function from the <code>usethis</code> package. However, you could also create the script manually if you prefer.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(devtools)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(roxygen2)</span>
<span id="cb1-3"></span>
<span id="cb1-4">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_r</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"make_project_template"</span>)</span></code></pre></div>
<p>Now that you have a blank script, you can begin writing the function. This step will vary considerably depending on your needs and the structure of your projects. However, there are a few things that will likely be standard regardless of your particular needs. First, the function will need a <code>path</code> argument to ensure RStudio knows where you’ll be creating the project. You could add arguments for other things, such as initializing a git repository, but I’ll keep it simple for these purposes. Additionally, you’ll likely be documenting the function using <code>roxygen2</code>, as I’ve done below, so that you can consistently generate documentation for your package.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @title Make Project Template</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @description Create a new project template in RStudio.</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param path The path to the new project.</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @export</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @examples</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' try(make_project_template("path/to/new/project"))</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @importFrom usethis create_project</span></span>
<span id="cb2-8">make_project_template <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(path) {</span>
<span id="cb2-9"></span>
<span id="cb2-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stop if no path is provided</span></span>
<span id="cb2-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) {</span>
<span id="cb2-12">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You must provide a path for the new project."</span>)</span>
<span id="cb2-13">    }</span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create the project</span></span>
<span id="cb2-15">  usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_project</span>(path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">open =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create the necessary directories</span></span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showWarnings =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create the data subdirectory</span></span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showWarnings =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># copy the script to the project</span></span>
<span id="cb2-24">  script_source <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"extdata"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"script.R"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your-package"</span>)</span>
<span id="cb2-25">  script_dest <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"script.R"</span>)</span>
<span id="cb2-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.copy</span>(script_source, script_dest, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">overwrite =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-27">}</span></code></pre></div>
<p>The <code>make_project_template</code> function above is a simple example of what you might include in your project template. It begins by checking that a path argument is provided and then creates a new project at that path. Next, it creates a <code>data/</code> directory, which is a common directory in data projects. You could just as easily create a <code>scripts/</code> directory or any other directory you might need. Finally, the function copies a script from the <code>extdata/</code> directory in your package to the new project. This script could be anything you use in every project, such as a script to load your data or a script to clean your data. While not strictly necessary, I included these two final steps to demonstrate the utility and flexibility of this type of function.</p>
<p>Once you save the script above, be sure to run the <code>document</code> and <code>install</code> functions from <code>devtools</code> to ensure that the function is properly documented and installed in your package. If you don’t do this, RStudio won’t be able to find the function later on when you try to create the new project.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">document</span>()</span>
<span id="cb3-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span>()</span></code></pre></div>
</section>
<section id="setting-up-the-metadata" class="level1">
<h1>Setting up the Metadata <a name="section4"></a></h1>
<p>Now that you have your project-creation function, you’ll need to explicitly tell RStudio where to find the function and how to call it if you want to use the project template wizard. To do this, you’ll need to create a <code>.dcf</code> file in the <code>inst/rstudio/templates/project/</code> directory you created earlier.<sup>1</sup> Since the function I provided above is relatively simple, the <code>.dcf</code> file won’t need much information. However, if your function is more complex, you might need to provide more information regarding the parameters your function expects. Although it might initially appear intimidating, the <code>.dcf</code> file is relatively straightforward–somewhat mimicking the protocol you’d follow when creating an R shiny app.</p>
<pre><code>Binding: make_project_template
Title: Make a New Project
Subtitle: Create a new project template in RStudio.
OpenFiles: script.R</code></pre>
<p>The <code>.dcf</code> file above begins with Binding, which is where you explicitly call the function you wrote earlier. Next, you’ll provide a Title and an optional Subtitle for your project template. The title will be what appears in the RStudio project template wizard, so make sure it’s descriptive and easy to understand. The subtitle will be what appears when your mouse hovers over the title in the wizard. Finally, the OpenFiles argument tells RStudio that you’d like to automatically open the <code>script.R</code> file every time you generate a new project. This is optional, but it can be helpful if you have a standard script you use in every project.</p>
<p>Now that you have everything in place, you should be able to open RStudio and create a new project using your project template. To do so, click on <code>Project</code> in the top-right corner of RStudio, followed by <code>New Project... -&gt; New Directory -&gt; {Title of your project template}</code>. You should see a screen appear requesting a path for your new project. Once you provide the path, click <code>Create Project</code>, and you should see a new project with the directories and files you specified in your function.</p>


<!-- -->

</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Note that the <code>.dcf</code> file is a simple text file, so you can create it in any text editor you prefer. I recommend using VSCode to generate it as it is relatively straightforward to do so there, but you can edit it using RStudio’s built-in text editor if you prefer.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>RStudio</category>
  <category>Code</category>
  <category>Projects</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/r-project-template.html</guid>
  <pubDate>Tue, 28 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Greek Alphabet in Markdown</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/greek-letters.html</link>
  <description><![CDATA[ 




<p>The following table is a recreation of Table 1.3 found in <a href="https://press.princeton.edu/books/paperback/9780691159171/a-mathematics-course-for-political-and-social-research">A Mathematics Course for Political &amp; Social Research</a> by Will H. Moore and David A. Siegel, with a few additions and changes. This table is a quick reference for Greek alphabet notation in Markdown and RMarkdown, and it can also be useful for formatting math equations in LaTeX.</p>
<p>Note that the inline code snippets for the Greek letters’ lower case and upper case versions are the same, with the only difference relating to the capitalization of the letter in the inline code. For example, the inline code for the lower case alpha is <code>$\alpha$</code>, and the inline code for the upper case alpha is <code>$\Alpha$</code>.</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Upper case</th>
<th>Lower case</th>
<th>Name</th>
<th>Inline Code</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CAlpha"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Calpha"></td>
<td>Alpha</td>
<td><code>$\alpha$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CBeta"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cbeta"></td>
<td>Beta</td>
<td><code>$\beta$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CGamma"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cgamma"></td>
<td>Gamma</td>
<td><code>$\Gamma$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CDelta"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cdelta"></td>
<td>Delta</td>
<td><code>$\Delta$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CEpsilon"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cepsilon"></td>
<td>Epsilon</td>
<td><code>$\Epsilon$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CZeta"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Czeta"></td>
<td>Zeta</td>
<td><code>$\Zeta$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CEta"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Ceta"></td>
<td>Eta</td>
<td><code>$\Eta$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CTheta"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Ctheta"></td>
<td>Theta</td>
<td><code>$\Theta$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CIota"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Ciota"></td>
<td>Iota</td>
<td><code>$\Iota$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CKappa"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Ckappa"></td>
<td>Kappa</td>
<td><code>$\Kappa$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CLambda"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Clambda"></td>
<td>Lambda</td>
<td><code>$\Lambda$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CMu"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cmu"></td>
<td>Mu</td>
<td><code>$\Mu$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CNu"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cnu"></td>
<td>Nu</td>
<td><code>$\Nu$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CXi"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cxi"></td>
<td>Xi</td>
<td><code>$\Xi$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5COmicron"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Comicron"></td>
<td>Omicron</td>
<td><code>$\Omicron$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CPi"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cpi"></td>
<td>Pi</td>
<td><code>$\Pi$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CRho"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Crho"></td>
<td>Rho</td>
<td><code>$\Rho$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CSigma"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Csigma"></td>
<td>Sigma</td>
<td><code>$\Sigma$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CTau"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Ctau"></td>
<td>Tau</td>
<td><code>$\Tau$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CUpsilon"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cupsilon"></td>
<td>Upsilon</td>
<td><code>$\Upsilon$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CPhi"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cphi"></td>
<td>Phi</td>
<td><code>$\Phi$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CChi"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cchi"></td>
<td>Chi</td>
<td><code>$\Chi$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CPsi"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cpsi"></td>
<td>Psi</td>
<td><code>$\Psi$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5COmega"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Comega"></td>
<td>Omega</td>
<td><code>$\Omega$</code></td>
</tr>
</tbody>
</table>


<!-- -->


 ]]></description>
  <category>Markdown</category>
  <category>RMarkdown</category>
  <category>Greek Alphabet</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/greek-letters.html</guid>
  <pubDate>Sun, 19 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Markdown Notation</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/markdown-notation.html</link>
  <description><![CDATA[ 




<p>The following table is a recreation of Table 1.2 found in <a href="https://press.princeton.edu/books/paperback/9780691159171/a-mathematics-course-for-political-and-social-research">A Mathematics Course for Political &amp; Social Research</a> by Will H. Moore and David A. Siegel, with a few additions and changes<sup>1</sup>. This table is a quick reference for mathematical notation in Markdown and RMarkdown, and it can also be useful for formatting math equations in LaTeX. Additionally, it is worth noting that any of these inline code snippets can also be expressed as code blocks in markdown and Rmarkdown by wrapping them in double dollar signs, e.g., <code>$$a + b$$</code>.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 29%">
<col style="width: 36%">
<col style="width: 34%">
</colgroup>
<thead>
<tr class="header">
<th>Symbol</th>
<th>Meaning</th>
<th>Inline Code</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?a%20+%20b"></td>
<td>Addition</td>
<td><code>$a + b$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?a%20-%20b"></td>
<td>Subtraction</td>
<td><code>$a - b$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?a%20%5Ctimes%20b"> <img src="https://latex.codecogs.com/png.latex?a%20%5Cast%20b"> <img src="https://latex.codecogs.com/png.latex?a%20%5Ccdot%20b"></td>
<td>Multiplication</td>
<td><code>$a \times b$</code> <code>$a \ast b$</code> <code>$a \cdot b$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?a%20/%20b"> <img src="https://latex.codecogs.com/png.latex?a%20%5Cdiv%20b"> <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Ba%7D%7Bb%7D"></td>
<td>Division</td>
<td><code>$a / b$</code> <code>$a \div b$</code> <code>$\frac{a}{b}$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?5%5Cmod%202=1"></td>
<td>Modulo</td>
<td><code>$5\mod 2 = 1$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cpm%20a"></td>
<td>Plus or Minus</td>
<td><code>$\pm a$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?a%5En"></td>
<td>Exponent</td>
<td><code>$a^n$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Csqrt%5Bn%5D%7Ba%7D"></td>
<td>Radical</td>
<td><code>$\sqrt[n]{a}$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?3!=3%20%5Ctimes%202%20%5Ctimes%201"></td>
<td>Factorial</td>
<td><code>$3!=3 \times 2 \times 1$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CDelta%20x"></td>
<td>Change in x</td>
<td><code>$\Delta x$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Cpi"></td>
<td>Pi</td>
<td><code>$\pi$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?e"></td>
<td>Euler’s constant</td>
<td><code>$e$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Cinfty"> <img src="https://latex.codecogs.com/png.latex?-%5Cinfty"></td>
<td>Infinity</td>
<td><code>$\infty$</code> <code>$-\infty$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%5Csum_%7Bi%20=%20k%7D%5El%20x_i"></td>
<td>Sum of <img src="https://latex.codecogs.com/png.latex?x_i"> from index <img src="https://latex.codecogs.com/png.latex?i%20=%20k"> to <img src="https://latex.codecogs.com/png.latex?i%20=%20l"></td>
<td><code>$\displaystyle\sum_{i = k}^l x_i$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%5Cprod_%7Bi%20=%20k%7D%5El%20x_i"></td>
<td>Product of <img src="https://latex.codecogs.com/png.latex?x_i"> from index <img src="https://latex.codecogs.com/png.latex?i%20=%20k"> to <img src="https://latex.codecogs.com/png.latex?i%20=%20l"></td>
<td><code>$\displaystyle\prod_{i = k}^l x_i$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?..."></td>
<td>Continued progression</td>
<td><code>$...$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bd%7D%7Bdx%7D"></td>
<td>Total derivative with respect to x</td>
<td><code>$\frac{d}{dx}$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Cpartial%7D%7B%5Cpartial%20x%7D"></td>
<td>Partial derivative with respect to x</td>
<td><code>$\frac{\partial}{\partial x}$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Cint%20dx"></td>
<td>Integral over x</td>
<td><code>$\int dx$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?a%20%5Cbigcup%20b"></td>
<td>Set union</td>
<td><code>$a \bigcup b</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?a%20%5Cbigcap%20b"></td>
<td>Set intersection</td>
<td><code>$a \bigcap b$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?a%20%5Ctimes%20b"></td>
<td>Cartesian product of sets</td>
<td><code>$a \times b$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Csetminus"></td>
<td>Set difference</td>
<td><code>$\setminus$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?A%5E%7Bc%7D"></td>
<td>Complement of set A</td>
<td><code>$A^{c}$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?A%20=%20%5Cemptyset"></td>
<td>A is an empty (or null) set</td>
<td><code>$A = \emptyset$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?x%20%5Cin%20A"></td>
<td>Set membership</td>
<td><code>$x \in A$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?x%20%5Cnotin%20A"></td>
<td>Not a member of a set</td>
<td><code>$x \notin A$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cmid"> <img src="https://latex.codecogs.com/png.latex?%5Cni"> <img src="https://latex.codecogs.com/png.latex?:"></td>
<td>Such that</td>
<td><code>$\mid$</code> <code>$\ni$</code> <code>$:$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?a%20%5Csubset%20b"></td>
<td>Proper subset</td>
<td><code>$a \subset b$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?a%20%5Csubseteq%20b"></td>
<td>Subset</td>
<td><code>$a \subseteq b$</code></td>
</tr>
<tr class="odd">
<td>$&lt; $ and $ &gt; $</td>
<td>Less than and greater than</td>
<td><code>$&lt; $ and $ &gt; $</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cleq"> and <img src="https://latex.codecogs.com/png.latex?%5Cgeq"></td>
<td>Less than or equal to and greater than or equal to</td>
<td><code>$\leq$ and $\geq$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Capprox"></td>
<td>Approximately equal to</td>
<td><code>$\approx$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cequiv"></td>
<td>Equivalent to</td>
<td><code>$\equiv$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Cneq"></td>
<td>Not equal to</td>
<td><code>$\neq$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cforall"></td>
<td>For all</td>
<td><code>$\forall$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Cexists"></td>
<td>There exists</td>
<td><code>$\exists$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5CRightarrow"></td>
<td>Implies</td>
<td><code>$\Rightarrow$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5CLeftrightarrow"></td>
<td>If and only if</td>
<td><code>$\Leftrightarrow$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cbecause"></td>
<td>Because</td>
<td><code>$\because$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Ctherefore"></td>
<td>Therefore</td>
<td><code>$\therefore$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cneg"></td>
<td>Negation</td>
<td><code>$\neg$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?f(x)"></td>
<td>Function</td>
<td><code>$f(x)$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%7Ba,%20b%7D"></td>
<td>Delimiter for a discrete set</td>
<td><code>${a, b}$</code></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Ba,%20b%5D"></td>
<td>Closed interval</td>
<td><code>$[a, b]$</code></td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?(a,%20b)"></td>
<td>Open interval</td>
<td><code>$(a, b)$</code></td>
</tr>
</tbody>
</table>


<!-- -->



<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I’ve added some additional symbols and changed the formatting slightly for my purposes.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Markdown</category>
  <category>RMarkdown</category>
  <category>Math Notation</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/markdown-notation.html</guid>
  <pubDate>Sun, 19 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Recurring Emails Using R</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/auto-emails-in-r.html</link>
  <description><![CDATA[ 




<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Introduction</li>
<li>Setting Up Gmailr</li>
<li>Gmailr Code</li>
<li>Automating with CronR</li>
</ol>
</section>
<section id="introduction" class="level1">
<h1>Introduction <a name="section1"></a></h1>
<p>I started trying to figure out how to send emails to myself recently when I had the idea to send myself a weekly reminder email with a link to an R Shiny app I created to survey myself–primarily for collecting some data on myself for year-end analytics. I figured I could use one of the many Gmail apps that are out there, but I soon became frustrated when they either didn’t work how I wanted them to or charged far too much for the functionality I wanted. I didn’t feel like I needed to pay between 5 and 10 dollars a month to send myself a few reminder emails a month!</p>
<p>Soon thereafter, I found out that there are a few packages in R that allow you to use API calls to send emails through existing accounts. I decided to use the <code>gmailr</code> package because the email I am currently using is a Gmail account, and the package seemed well-supported. Moreover, I used the <code>cronR</code> package to do the scheduling, which worked well on my Mac!</p>
<p>If you would just like to see the code I used, feel free to <a href="https://kevinparra.co/downloads/auto-email.txt">download the document here.</a></p>
</section>
<section id="setting-up-gmailr" class="level1">
<h1>Setting Up Gmailr <a name="section2"></a></h1>
<p>Setting up the required authorization for the <code>gmailr</code> package takes quite a bit of clicking, but you can do it by <a href="https://gmailr.r-lib.org/articles/oauth-client.html">following the instructions here.</a>. Following those instructions allowed me to make calls to the Gmail API from R.</p>
<p>In short, you’ll begin by signing in to your Google account so that you can create a project in the Google Cloud console. You’ll enable the Gmail API, configure the OAuth consent screen for your project, and generate an OAuth client JSON. Importantly, make sure you put the JSON file in the same folder as your R script.</p>
</section>
<section id="gmailr-code" class="level1">
<h1>Gmailr Code <a name="section3"></a></h1>
<p>The code to send the email is fairly short. First, I load the gmailr package setting the additional arguments so they don’t clutter your console when the code gets run. Additionally, I save the path to the JSON file as an object so that I can call it later when I authenticate the credentials. Note that my JSON file is called <code>credentials.json</code> and is saved in my home directory, but it’ll be called something different by default when you get it originally. Once I have the credentials path established, I can run the <code>gm_auth_configure()</code> function to tell the package where to find them. Finally, I run the <code>gm_oauth_client()</code> function to authenticate the credentials.</p>
<p>The purpose of running this code is to make sure that the script runs without any user input. If you don’t run this code, you’ll have to manually select the authorized email address each time you run the script, which defeats the purpose of having such a script in the first place.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gmailr, </span>
<span id="cb1-2">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warn.conflicts =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, </span>
<span id="cb1-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb1-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb1-5">        )</span>
<span id="cb1-6"></span>
<span id="cb1-7">GMAILR_OAUTH_CLIENT <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/path/to/credentials.json"</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gm_auth_configure</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> GMAILR_OAUTH_CLIENT)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gm_oauth_client</span>()</span></code></pre></div>
</details>
</div>
<p>If I don’t run the code above, I get the following message when I run the code to send the email:</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">The gmailr package is requesting access to your Google account.</span>
<span id="cb2-2">Enter <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span> to start a new auth process or select a pre<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>authorized account.</span>
<span id="cb2-3"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Send me to the browser <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> a new auth process.</span>
<span id="cb2-4"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> youremail<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>email.com</span></code></pre></div>
</details>
</div>
<p>which means I have to manually select the authorized email address. Since I want to automate this process, I set the authorized email address as a system variable.</p>
<p>Next, I made an object with the authorized email and one for the recipient email.<sup>1</sup></p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">sender_email <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your_email_address"</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">recipient_email <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sender_email</span></code></pre></div>
</details>
</div>
<p>Of course, the same thing could be done using one object, but I wanted to make the code as clear as possible for myself if I reviewed it at some future point.</p>
<p>Next, I set the email’s subject and body–the former as a string and the latter as an HTML file I wrote in VSCode. Of course, I could just as easily write the body as a string in R, including simple HTML tags to format the text. However, I wanted a more complex email body, including a much longer HTML code for my email signature.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">email_subject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Email Subject"</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">email_body <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readLines</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/path/to/body.html"</span>,</span>
<span id="cb4-4">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warn =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb4-5">                        )</span>
<span id="cb4-6"></span>
<span id="cb4-7">email_body <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(email_body, </span>
<span id="cb4-8">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-9">                    )</span></code></pre></div>
</details>
</div>
<p>Finally, I ran the following code to put together everything above:</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gm_mime</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gm_from</span>(sender_email) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gm_to</span>(recipient_email) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gm_html_body</span>(email_body) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gm_subject</span>(email_subject) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gm_send_message</span>()</span></code></pre></div>
</details>
</div>
<p>The <code>gm_mime()</code> function creates a new email object, and the native pipe operator (<code>|&gt;</code>) passes the object to the next function. The <code>gm_from()</code> function sets the sender email address, and the <code>gm_to()</code> function sets the recipient email address from above. Next, the <code>gm_html_body()</code> function sets the email body, and <code>gm_subject()</code> sets the email subject. Finally, the <code>gm_send_message()</code> function sends the email.<sup>2</sup></p>
</section>
<section id="automating-with-cronr" class="level1">
<h1>Automating with CronR <a name="section4"></a></h1>
<p>Now that you have the code needed to send the Gmail message, you should automate the process so that you don’t have to manually source the document each week. After all, what’s the point of using this as a reminder if you need to remember to run the code each week?</p>
<p>I used the <code>CronR</code> package, which adds a handy GUI Addin to your RStudio session. I selected the settings I wanted, and the package did its job, sending me a weekly reminder email with a link to my Shiny app. For a more detailed explanation of how to use the package’s commands or its GUI, check out the <a href="https://github.com/bnosac/cronR">package’s documentation.</a> However, the add-in menu is fairly straightforward, and I was able to set up the automation in a few minutes.</p>
<p>If you’re doing this on a Windows machine, you won’t be able to use the <code>CronR</code> package. However, you can use the <code>taskscheduleR</code> package, which is available on CRAN. I haven’t used it myself, but it seems to be fairly straightforward as well.</p>


<!-- -->

</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Note that I saved my personal email as an RDS file so that I could call it in the script using <code>readRDS()</code> for security and ease. That way, I wouldn’t accidentally push my email to GitHub by hard-coding it into my script. However, running the code in this post can be just as easily done by setting the email address as a string, assuming it’ll just live on your local machine.↩︎</p></li>
<li id="fn2"><p>If you run this code and end up with any issues, make sure to look through the official documentation for the <code>gmailr</code> package. I had a few issues with the authorization when I initially ran this code, but I was able to resolve them by looking through the <a href="https://gmailr.r-lib.org/index.html">comprehensive documentation</a>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>email</category>
  <category>automation</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/auto-emails-in-r.html</guid>
  <pubDate>Thu, 11 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Migrate All R Packages to a New Computer</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/r-packages-install.html</link>
  <description><![CDATA[ 




<p><em>If you have any questions or comments regarding the code below, feel free to reach out to <a href="navark4@unlv.nevada.edu">me</a>. I am always happy to talk R with anyone!</em></p>
<p>It can be a bit of a hassle to install R and RStudio on a new computer, especially when you have hundreds of user-downloaded packages you’d like to migrate to the new computer. You could copy the folder that has all your packages installed, but there are bound to be issues that arise from such a brute-force solution–especially if you’re switching from one operating system to another. Below is some simple code that helped me switch from using R in Windows to Mac. Before I proceed, though, I would like to thank <a href="https://www.r-bloggers.com/author/andrew-z/">Andrew Z.</a> from <a href="https://www.r-bloggers.com/">R-Bloggers</a> for the helpful <a href="https://www.r-bloggers.com/2015/06/list-of-user-installed-r-packages-and-their-versions/">post</a> that inspired this one.</p>
<p>I’ve split the code into three chunks. The first generates a list of all the user-installed packages in your original R installation. The second takes that list and makes it into a downloadable vector. Finally, the third chunk takes the .txt file and uses it to download all the R packages on your new machine.</p>
<p><strong>Importantly, the first two chunks should be run on the original machine and the third should be run on the new one.</strong></p>
<section id="generating-the-list" class="level1">
<h1>Generating the List</h1>
<p>The code below is what generates the list of user-installed packages in your original computer’s R installation.</p>
<pre><code>packs &lt;- as.vector(installed.packages()[,1])

print(packs, row.names = FALSE)</code></pre>
<p>As you can see from the code, you start by generating a vector with the <code>installed.packages</code> function. However, it is important to subset the data because the function will return a lot of unnecessary information–along with the base packages. The, we print all the packages to see if we got what we wanted.</p>
</section>
<section id="saving-the-vector" class="level1">
<h1>Saving the vector</h1>
<p>Importantly, we want to make sure that all the packages are surrounded by quotation marks for when we input the vector in the <code>install.package</code> function. Moreover, when we write the vector as a txt file, we want to ensure that all the packages have comma delimiters so that they work properly in the coming code.</p>
<pre><code>
packs1 &lt;- paste0('"', packs, '"')

writeLines(paste(packs1, collapse = ","), "package_list.txt")</code></pre>
</section>
<section id="downloading-to-the-new-computer" class="level1">
<h1>Downloading to the New Computer</h1>
<p>Finally, we get to the bit of code that we’ll run on the new computer! As we can see below, the first step is going to be bringing in the .txt file. You can do so with the <code>read.delim</code> function, which will generate an object with all the desired packages. Next, we take the generated object and convert it into a vector with the desired properties. And finally, we install the vector of packages to the new computer.</p>
<pre><code>setwd("/Users/kevin/Downloads")

data1 &lt;- read.delim('package_list.txt', header = FALSE, sep = ",")

pack_vec &lt;- as.vector(unlist(t(as.matrix(data1[,-1]))))

install.packages(pack_vec)
</code></pre>


<!-- -->

</section>

 ]]></description>
  <category>R</category>
  <category>RStudio</category>
  <category>Code</category>
  <category>Packages</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/r-packages-install.html</guid>
  <pubDate>Sat, 21 Oct 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Zero-Inflated Models</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/zero-inflated.html</link>
  <description><![CDATA[ 




<p><em>I am writing quick and easy R guides for my didactic purposes and to provide useful starting places for my peers in grad school. If you see that I have made a mistake or would like to suggest some way to make the post better or more accurate, please feel free to <a href="navark4@unlv.nevada.edu">email</a> me. I am always happy to learn from others’ experiences!</em></p>
<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Model Formula</li>
<li>Running it in R</li>
<li>Diagnostic Statistics</li>
</ol>
</section>
<section id="model-formula" class="level1">
<h1>Model Formula <a name="section1"></a></h1>
<p>When we are dealing with count data, the first step is always going to be to fit a <a href="https://www.kevinparra.co/blog/Notes/poisson-notes">Poisson</a> or <a href="https://www.kevinparra.co/blog/Notes/nagative-binomial">negative binomial</a> model. However, sometimes this is not always the best way of handling count data because neither model handles zero inflation adequately. Zero inflation is bound to be an issue with many data for the Poisson model because, as one can probably imagine, this will likely lead to a significant difference between the response variable’s variance and mean (i.e., dispersion). The negative binomial model is not immune to such an issue either, so a zero-inflated model necessarily becomes more appropriate for our purposes.</p>
<p>Now, just because the Poisson and negative binomial models are no longer appropriate for a response with zero inflation does not mean we forget about those models altogether. Just the opposite, in fact. The Poisson and negative binomial models play a key role in the zero-inflated models I’ll discuss below.</p>
<p>Before looking at those models, though, it is crucial to begin with a base understanding of what zero inflation means. Simply having zero values in count data does not mean there is zero inflation. Indeed, we likely expect there to be zero counts in a given response variable. For zero inflation to occur, we have to have a dependent variable with an excessive degree of zeroes.</p>
<p>When fitting a zero-inflated model, we see that there are two steps to predicting the dependent variable: (1) the zero prediction and (2) the count prediction. In other words, the zero-inflated model begins by running a <a href="https://www.kevinparra.co/blog/Notes/logit-notes">logistic regression</a>, which, if we recall, can be expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20logit(p)%20=%20%5Calpha%20+%20%5Cbeta_1%20X_1%20+%20%5Cbeta_2%20X_2%20+%20...%20+%20%5Cbeta_p%20X_p%20"></p>
<p>This half of the model will predict whether the outcome will be zero or a positive count integer(coded as 1 for zero predictions and 0 for count predictions). From this, we get the probability of observing a zero in the response. If the given predictors can significantly predict the probability of observing a zero, then we have a pretty good indication that there is zero inflation. Note that the model does not go on to exclude the observed zero values from the count half of the model.</p>
<p>After the model accounts for the probability of observing zero values, we move on to the next step, which is the count prediction. Here, the model applies either a Poisson regression or negative binomial regression to the response variable, which is how we distinguish between a ZIP and ZINB model. If we recall, the <a href="https://www.kevinparra.co/blog/Notes/poisson-notes">Poisson model</a> can be expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20ln(%5Cmu)%20=%20%5Calpha%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p%20"></p>
<p>and the <a href="https://www.kevinparra.co/blog/Notes/nagative-binomial">negative binomial model</a> can be expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20ln(%5Cmu)%20=%20%5Cbeta_0%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p%20+%20%5Cepsilon%20"></p>
<p>We can therefore express the zero-inflated Poisson model as</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0APr(Y%20=%200)%20=%20%5Cpi%20+%20(1%20-%20%5Cpi)e%5E%7B-%5Clambda%7D%20%5C%5C%0APr(Y%20=%20y_i)%20=%20(1%20-%20%5Cpi)%5Cfrac%7B%5Clambda%5E%7By_1%7De%5E%7B-%5Clambda%7D%7D%7By_%7Bi%7D!%7D%20%5C%5C%0Ay_i%20=%201,2,3,...%0A%5Cend%7Baligned%7D%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?y_i"> represents the non-negative count values in the response, <img src="https://latex.codecogs.com/png.latex?%5Clambda"> is the expected count for the <em>i</em>th observation in the Poisson model, and <img src="https://latex.codecogs.com/png.latex?%5Cpi"> is the probability of extra zeros.</p>
</section>
<section id="running-it-in-r" class="level1">
<h1>Running it in R <a name="section3"></a></h1>
<p>Running either type of zero-inflated model in r can be done using the <code>zeroinfl</code> function from the <code>pscl</code> package. Notice that the syntax for this model differs from other models insofar as this model asks us to specify linear predictors for both the zero and count sides. Therefore, we would write</p>
<pre><code>
zip.mod &lt;- zeroinfl(dv ~ iv1 + iv2 + iv3 | iv4 + iv5 + iv6, data = data)
summary(zip.mod)
</code></pre>
<p>Notice that the default is set to the zero-inflated Poisson model, but you can change that by adding the argument <code>dist = "negbin"</code> to specify a zero-inflated negative binomial model.</p>
<pre><code>
zinb.mod &lt;- zeroinfl(dv ~ iv1 + iv2 + iv3 | iv4 + iv5 + iv6, dist = "negbin", data = data)
summary(zinb.mod)
</code></pre>
<p>As you can see from the two models specified above, there are different predictors for the zero half of the model than there are for the count side of the model. That does not necessarily need to be the case, of course. You can fit the same predictors to both sides if that is what your theory stipulates.</p>
<p>Importantly, we can use</p>
<pre><code>zip.irr &lt;- cbind(exp(coef(zip.mod)), exp(confint(zip.mod)))</code></pre>
<p>to create an incidence rate ratio for ease of interpretation.</p>
<p>We can also compute the model’s standard errors by running</p>
<pre><code>exp(coef(zip.mod)) * sqrt(diag(vcov(zip.mod)))</code></pre>
</section>
<section id="diagnostic-statistics" class="level1">
<h1>Diagnostic Statistics <a name="section4"></a></h1>
<p>The diagnostic statistics for these two models will be <em>mostly</em> the same as those used for other count and categorical variable models. Importantly, though, we also want to employ the <code>vuong</code> function from <code>pscl</code> to run a Vuong test. This test will give us insight into the difference between a zero-inflated model and a Poisson or negative binomial model. A significant result indicates that we prefer one model over another.</p>


<!-- -->

</section>

 ]]></description>
  <category>Notes</category>
  <category>Model</category>
  <category>Data Science</category>
  <category>Zero-Inflation</category>
  <category>Count Data</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/zero-inflated.html</guid>
  <pubDate>Wed, 18 Oct 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Negative Binomial Model</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/nagative-binomial.html</link>
  <description><![CDATA[ 




<p><em>I am writing quick and easy R guides for my didactic purposes and to provide useful starting places for my peers in grad school. If you see that I have made a mistake or would like to suggest some way to make the post better or more accurate, please feel free to <a href="navark4@unlv.nevada.edu">email</a> me. I am always happy to learn from others’ experiences!</em></p>
<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Negative Binomial Model
<ol type="1">
<li>Model Equation</li>
<li>Negative Binomial Distribution</li>
</ol></li>
<li>Incidence Rate Ratios</li>
<li>Running it in R</li>
<li>Diagnostic Statistics</li>
</ol>
</section>
<section id="negative-binomial-model" class="level1">
<h1>Negative Binomial Model <a name="section1"></a></h1>
</section>
<section id="model-equation" class="level1">
<h1>Model Equation <a name="subsection1"></a></h1>
<p>This model is similar to the <a href="https://www.kevinparra.co/blog/Notes/poisson-notes">Poisson Model</a> in that it is suited for count dependent variables. However, the Poisson model assumes that the response variable’s mean and variance are equal–a condition that most real data commonly violate. If your response variable suffers from overdispersion (i.e., the dependent variable’s variance is greater than its mean), then the negative binomial model is a good alternative. Whereas the Poisson model assumes the variable follows a Poisson distribution, the negative binomial model works off of the negative binomial distribution, which relaxes the dispersion assumption. In order to do so, the <img src="https://latex.codecogs.com/png.latex?Variance%20(Y)"> is made into a function of the mean <img src="https://latex.codecogs.com/png.latex?%5Cmu"> and a dispersion parameter <img src="https://latex.codecogs.com/png.latex?%5Calpha">. Therefore, $Variance (Y) = (1 + ). When <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%200">, the variance is equal to the mean, making the negative binomial identical to the Poisson, under these circumstances.</p>
<p>The negative binomial model is similar to the Poisson model in that it can be modeled as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20ln(%5Cmu)%20=%20%5Cbeta_0%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p%20+%20%5Cepsilon%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?mu"> is the mean, <img src="https://latex.codecogs.com/png.latex?%5Cbeta_0"> is the intercept, the remaining <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> values are coefficients, and <img src="https://latex.codecogs.com/png.latex?%5Cepsilon"> is an error term. The equation’s left side contains the log link function. We include an error term in this model to reflect the overdispersion. Notably, there are two ways of expressing the response variable’s variance: as a linear equation <img src="https://latex.codecogs.com/png.latex?Variance%20(Y)%20=%20%5Cmu(1%20+%20%5Cmu)"> or a quadratic equation <img src="https://latex.codecogs.com/png.latex?Variance%20(Y)%20=%20%5Cmu(1%20+%20%5Calpha%20%5Cmu)%20=%20%5Cmu%20+%20%5Calpha%20%5Cmu%5E2">. The former is often called the NB1 model and the latter the NB2 model, and the latter is the one that most people use.</p>
<p>When trying to predict the response variable’s mean, we exponentiate both sides of the negative binomial model.</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cmu%20=%20exp(%5Cbeta_0%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p)%20"></p>
<p>Notice that the equation above does not include the <img src="https://latex.codecogs.com/png.latex?%5Cepsilon"> value. That is because <img src="https://latex.codecogs.com/png.latex?exp(%5Cepsilon)"> is assumed to be equal to 1 in this model as with the Poisson model, so it would be redundant to include it.</p>
<p>Additionally, as with the Poisson model, we can incorporate a temporal element if we want to represent a count of occurrences in a given timeframe <img src="https://latex.codecogs.com/png.latex?t">. If we do define an incidence rate, the model can be re-expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20ln(%5Cmu%20/%20t)%20=%20%5Cbeta_0%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p%20+%20%5Cepsilon%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?t"> is the time period and <img src="https://latex.codecogs.com/png.latex?ln(%5Cmu%20/%20t)"> represents the log of the incidence rate. We can also rewrite the equation above as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20ln(%5Cmu)%20=%20ln(t)%20+%20%5Cbeta_0%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p%20+%20%5Cepsilon%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?ln(t)"> is the offset in the model.</p>
</section>
<section id="negative-binomial-distribution" class="level1">
<h1>Negative Binomial Distribution <a name="subsection2"></a></h1>
<p>As we saw above, the negative binomial model handles overdispersion in count data better than the Poisson model. That is because the negative binomial probability distribution handles greater variance better than the Poisson distribution. In this probability distribution, we count all the independent Bernoulli trials before a given number of achieved successes. We can express the negative binomial probability distribution as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(Y%20=%20y)%20=%20%5Cbinom%7By%20+%20k%20-%201%7D%7By%7D%20p%5Ek%20(1-p)%5Ey%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cbinom%7By%20=%20k%20-%201%7D%7By%7D"> is the negative binomial coefficient, <img src="https://latex.codecogs.com/png.latex?y"> is the number of trials before an achieved success, k is the number of successes in <img src="https://latex.codecogs.com/png.latex?y%20+%20k"> trials, and <img src="https://latex.codecogs.com/png.latex?p"> is the given trial’s success probability.</p>
</section>
<section id="incidence-rate-ratios" class="level1">
<h1>Incidence Rate Ratios <a name="section2"></a></h1>
<p>The negative binomial model employs incidence rate ratios like the Poisson model, estimating the response variable’s log incidence rate. In order to get this value, then, we exponentiation both sides of the model.</p>
</section>
<section id="running-it-in-r" class="level1">
<h1>Running it in R <a name="section3"></a></h1>
<p>When you want to fit a negative binomial model in R, you can use the <code>glm.nb</code> function from the <code>MASS</code> package. The code would look like</p>
<pre><code>
nb.mod &lt;- glm.nb(dv ~ iv1 + iv2 + ivp, data = data)
summary(nb.mod)
</code></pre>
<p>You can also run the same model using the <code>vglm</code> function from <code>VGAM</code> using the following code:</p>
<pre><code>
nb.vglm &lt;- vglm(dv ~ iv1 + iv2 + ivp, family = neginomial, data = data)
summary(nb.vglm)
</code></pre>
<p>Using the <code>glm.nb</code> might be somewhat easier, unless you are specifying other models in the <code>VGAM</code> package.</p>
</section>
<section id="diagnostic-statistics" class="level1">
<h1>Diagnostic Statistics <a name="section4"></a></h1>
<p>The diagnostic statistics for this model are mostly the same as those used for the <a href="https://www.kevinparra.co/blog/Notes/poisson-notes">Poisson model</a> and others I’ve covered here.</p>


<!-- -->

</section>

 ]]></description>
  <category>Notes</category>
  <category>Model</category>
  <category>Data Science</category>
  <category>Count</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/nagative-binomial.html</guid>
  <pubDate>Sun, 15 Oct 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Poisson Model</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/poisson-notes.html</link>
  <description><![CDATA[ 




<p><em>I am writing quick and easy R guides for my didactic purposes and to provide useful starting places for my peers in grad school. If you see that I have made a mistake or would like to suggest some way to make the post better or more accurate, please feel free to <a href="navark4@unlv.nevada.edu">email</a> me. I am always happy to learn from others’ experiences!</em></p>
<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Model Formula</li>
<li>Incidence Ratios</li>
<li>Running it in R</li>
<li>Diagnostic Statistics</li>
</ol>
</section>
<section id="model-formula" class="level1">
<h1>Model Formula <a name="section1"></a></h1>
<p>Poisson models are useful for running regressions on count response variables (i.e., nonnegative integers that follow a Poisson distribution). You can represent this model as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20ln(%5Cmu)%20=%20%5Calpha%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cmu"> represents the average or expected average of observed events in the dependent variable, <img src="https://latex.codecogs.com/png.latex?%5Calpha"> is the intercept, and the <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> values are the coefficients. As you can see, <img src="https://latex.codecogs.com/png.latex?ln(%5Cmu)"> uses the log link.</p>
<p>Importantly, the Poisson model assumes that the mean of the count response variable is equal to the variable’s variance, such that <img src="https://latex.codecogs.com/png.latex?E(Y)%20=%20Variance%20(Y)%20=%20%5Cmu">. We get the predicted mean for the count response by exponentiating both sides of the equation.</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cmu%20=%20exp(%20%5Calpha%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p%20)%20"></p>
<p>We can also specify the model so that the response variable represents a count value within a given set of times, which is called the incidence rate. This model can be specified as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20ln(%5Cmu%20/t)%20=%20%5Calpha%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?t"> is a period of time and <img src="https://latex.codecogs.com/png.latex?%5Cmu%20/t"> indicates the incidence rate. You can also represent this equation as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20ln(%5Cmu)%20=%20ln(t)%20+%20%5Calpha%20+%20%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?ln(t)"> is the offset in the model equation.</p>
<p>The Poisson model assumes the response variable follows the Poisson probability distribution, which can be expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(y)%20=%20%5Cfrac%7Be%5E%7B-u%7D%20u%5Ey%7D%7By!%7D%20"></p>
<p>where y is the count value of the response variable, <img src="https://latex.codecogs.com/png.latex?%5Cmu"> is the expected or average of events, and <img src="https://latex.codecogs.com/png.latex?y!"> is a factorial of the response. Note that <img src="https://latex.codecogs.com/png.latex?%5Cmu"> is often represented as <img src="https://latex.codecogs.com/png.latex?%5Clambda"> as well.</p>
<p>In the Poisson distribution, the count variable’s mean is equal to the variable’s variance.</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cmu%20=%20E(y)%20=%20Variance(y)%20"></p>
<p>The log-likelihood function for the Poisson distribution can be expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20l(%5Cmu;y)%20=%20%5Csum%5E%7Bn%7D_%7Bi=1%7D%7By_1%20ln%5Cmu_i%20-%20%5Cmu_i%20-%20ln(y_i!)%7D%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?l(%5Cmu;y)"> is the log likelihood function of <img src="https://latex.codecogs.com/png.latex?%5Cmu"> given the values of the count variable.</p>
</section>
<section id="incidence-ratios" class="level1">
<h1>Incidence Ratios <a name="section2"></a></h1>
<p>Returning to the incidence rate from above, the Poisson model estimates the log of the expected counts of an event, given the predictor variables. We can get the expected counts of a given even by exponentiating both sides of the equation, so that</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cmu%20=%20exp(%5Calpha%20+%20%5Cbeta%20X)%20"></p>
<p>Once you have the incidence rate calculated, you can find the incidence ratio, which will tell you how the count value will change with a one-unit increase in the given independent variable. You can take the incidence rate to calculate the percent change in the response by doing the following:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20(Incidence%20Rate%20-%201)%20*%20100%20"></p>
</section>
<section id="running-it-in-r" class="level1">
<h1>Running it in R <a name="section3"></a></h1>
<p>You can run a Poisson regression in R by using either the <code>glm</code> function from the <code>stats</code> package or the <code>vglm</code> function from the <code>VGAM</code> package. The easiest way of doing this, though, is by using the <code>glm</code> function since that comes with base R. Because of that, I’ll be focusing on the <code>glm</code> function, but the code should not be too different for the <code>vglm</code> function.</p>
<pre><code>
poi.mod &lt;- glm(y ~ x1 + x2 + x3, family = poisson, data = data)
summary(poi.mod)

poi.irr &lt;- exp(coef(poi.mod))*sqrt(diag(vcov(poi.mod)))
</code></pre>
</section>
<section id="diagnostic-statistics" class="level1">
<h1>Diagnostic Statistics <a name="section4"></a></h1>
<p>The diagnostic statistics are mostly the same as those for other models covered, so this section will be brief. The one thing worth pointing out is that you can run a likelihood ratio test by fitting a null model.</p>
<pre><code>
anova(poi.mod, update(poi.mod, ~ 1), test = "Chisq")
</code></pre>
<p>The above code will compare the fitted model to a null model using a Chi-squared test. A significant result indicates that the fitted model fits your data better than the null model.</p>
<p>You can also run Pseudo-<img src="https://latex.codecogs.com/png.latex?R%5E2">, AIC, and BIC tests for this model.</p>


<!-- -->

</section>

 ]]></description>
  <category>Notes</category>
  <category>Model</category>
  <category>Data Science</category>
  <category>Poisson</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/poisson-notes.html</guid>
  <pubDate>Sun, 08 Oct 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Multinomial Logit Model</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/multinomial-logit.html</link>
  <description><![CDATA[ 




<p><em>I am writing quick and easy R guides for my didactic purposes and to provide useful starting places for my peers in grad school. If you see that I have made a mistake or would like to suggest some way to make the post better or more accurate, please feel free to <a href="navark4@unlv.nevada.edu">email</a> me. I am always happy to learn from others’ experiences!</em></p>
<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Model Formula</li>
<li>Conditional Probabilities and Odds Ratios</li>
<li>Running it in R</li>
<li>Diagnostic Statistics</li>
</ol>
</section>
<section id="model-formula" class="level1">
<h1>Model Formula <a name="section1"></a></h1>
<p>The multinomial logistic regression is used for nominal response variables with multiple unordered categories, like party ID variables. You can also use this for an ordinal response variable, assuming the proportional odds assumption doesn’t hold. This model differs from the proportional odds and partial proportional odds models because it compares the odds of being in a given category against the odds of being in the baseline category. Recall that the PO and PPO models compare the odds of being at or below a given category. The multinomial logit model can be expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20ln%20%5Cleft(%20%5Cfrac%7BP(Y%20=%20j%20%7C%20x_1,%20x_2,%20...,%20x_p)%7D%7BP(Y%20=%20J%20%7C%20x_1,%20x_2,%20...,%20x_p)%7D%20%5Cright)%20=%20%5Calpha_j%20+%20%5Cbeta_%7Bj1%7DX_1%20+%20%5Cbeta_%7Bj2%7DX_2%20+%20...%20+%20%5Cbeta_%7Bjp%7DX_p%20%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?j%20=%201,2,%20...,%20J%20-%201">. J is the baseline category, which can be any category but is usually the highest. <img src="https://latex.codecogs.com/png.latex?%5Calpha_j"> represents the intercepts and the beta values represent the logit coefficients. This model is similar to the generalized ordinal logit model in that it estimates <img src="https://latex.codecogs.com/png.latex?J%20-%201"> logit coefficients for each independent variable.</p>
<p>As you can see, this model is essentially a series of logit models, where being in a given category is coded as 1 and being in the baseline is a 0.</p>
<p>It’s important to note that this model assumes the dependent variable follows the multinomial distribution, which is an extension of the binomial distribution. The binomial distribution can be expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(Y%20=%20k)%20=%20%5Cbinom%7Bn%7D%7Bk%7Dp%5Ek%20(1-p)%5E%7Bn-k%7D%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cbinom%7Bn%7D%7Bk%7D"> is the binomial coefficient, k is the number of successes (1), n is the number of trials, and p is the success probability when the outcome is 1. Therefore,</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cbinom%7Bn%7D%7Bk%7D%20=%20%5Cfrac%7Bn!%7D%7B(n-k)!%20k!%7D%20"></p>
<p>Since our model has a response variable with multiple categories, the probability function can be expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(n_1,%20n_2,%20...,%20n_j)%20=%20%5Cfrac%7Bn!%7D%7B(n_1!n_2!...n_j!)%7Dp_%7B1%7D%5E%7Bn_1%7Dp_%7B2%7D%5E%7Bn_2%7D...p_%7Bj%7D%5E%7Bn_j%7D%20"></p>
<p>where j is the number of categories in the response, <img src="https://latex.codecogs.com/png.latex?n_j"> is the number of observations for a given category, and <img src="https://latex.codecogs.com/png.latex?p_j"> is the probability of choosing a given category.</p>
<p>The log-likelihood function for the multinomial distribution can be expressed as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20l(p,%20n)%20=%20%5Csum%5Ej_%7Bi=1%7D%20n_i%20ln%20p_i%20+%20ln%5Cfrac%7Bn!%7D%7Bn_1!n_2!...n_j!%7D%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?ln%5Cfrac%7Bn!%7D%7Bn_1!n_2!...n_j!%7D"> is a constant term and does not involve parameter <em>p</em>. <img src="https://latex.codecogs.com/png.latex?%5Csum%7Bj%7D%7Bi=1%7D%20n_i%20ln%20p_i"> is the sum of the number of observations for a given category and the log probability of choosing that category.</p>
</section>
<section id="conditional-probabilities-and-odds-ratios" class="level1">
<h1>Conditional Probabilities and Odds Ratios <a name="section2"></a></h1>
<p>If you want to calculate the odds of being in a category as opposed to the baseline, you can express the equation as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20Odds(Y%20=%20j%20vs.%20Y%20=%20J)%20=%20%5Cfrac%7BP(Y%20=%20j)%7D%7BP(Y%20=%20J)%7D%20"></p>
<p>The odds ratios for this model function almost exactly like those for the <a href="https://www.kevinparra.co/blog/Notes/logit-notes">logit model</a>.</p>
</section>
<section id="running-it-in-r" class="level1">
<h1>Running it in R <a name="section3"></a></h1>
<p>There are three packages you can use to run the multinomial logit model: <code>VGAM</code>, <code>nnet</code>, and <code>mlogit</code>. Using <code>VGAM</code>, you can run the <code>vglm</code> function. <code>nnet</code> uses the <code>multinom</code> function. And <code>mlogit</code> uses the <code>mlogit</code> function. The syntax for the <code>vglm</code> function is</p>
<pre><code>
mlm.mod &lt;- vglm(dv ~ iv1 + iv2 + ivp, multinomial(refLevel = 1), data = data)
summary(mlm.mod)
</code></pre>
<p>where multinomial is the family function and the refLevel argument indicates which level will serve as the baseline.</p>
<p>After running the code above, make sure to generate an odds ratio table, which can be done by running the following code:</p>
<pre><code>
mlm.or &lt;- cbind(exp(coef(mlm.mod)), exp(confint(mlm.mod)))
</code></pre>
</section>
<section id="diagnostic-statistics" class="level1">
<h1>Diagnostic Statistics <a name="section4"></a></h1>
<p>The diagnostic statistics for this model are exactly the same as those for the <a href="https://www.kevinparra.co/blog/Notes/logit-notes">logit model</a>.</p>


<!-- -->

</section>

 ]]></description>
  <category>Notes</category>
  <category>Model</category>
  <category>Data Science</category>
  <category>Multinomial</category>
  <category>Logit</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/multinomial-logit.html</guid>
  <pubDate>Mon, 02 Oct 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Stereotype Logit Model</title>
  <dc:creator>Kevin Navarrete-Parra</dc:creator>
  <link>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/stereotype-logit.html</link>
  <description><![CDATA[ 




<p><em>I am writing quick and easy R guides for my didactic purposes and to provide useful starting places for my peers in grad school. If you see that I have made a mistake or would like to suggest some way to make the post better or more accurate, please feel free to <a href="navark4@unlv.nevada.edu">email</a> me. I am always happy to learn from others’ experiences!</em></p>
<section id="table-of-contents" class="level1">
<h1>Table of contents</h1>
<ol type="1">
<li>Model Formula</li>
<li>Odds Ratios</li>
<li>Running it in R</li>
</ol>
<p><em>Note that I explore much of the information for Sections 2-4 more thoroughly in other posts. Of particular utility will be my posts on <a href="https://www.kevinparra.co/blog/Notes/logit-notes">logit models</a> and <a href="https://www.kevinparra.co/blog/Notes/continuation-ratio-model">continuation ratio models</a>.</em></p>
</section>
<section id="model-formula" class="level1">
<h1>Model Formula <a name="section1"></a></h1>
<p>The stereotype logit model is an interesting generalization of the proportional odds model, as we will see below because it adds a series of nuances to categorical data exploration. One of the primary use cases for this model instead of the PO model is when the proportional odds assumption does not hold, which is unsurprisingly common for most data. Of course, you could fit the PPO and GOL models if your data don’t follow the PO assumption, but the SL model might be more interesting.</p>
<p>The model’s equation is as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20logit%5B%5Cpi%20(j,%20J)%5D%20=%20ln%20%5Cleft(%20%5Cfrac%7BP(Y%20=%20j%20%7C%20x_1,%20x_2,%20...,%20x_p)%7D%7BP(Y%20=%20J%20%7C%20x_1,%20x_2,%20...,%20x_p)%7D%20%5Cright)%20=%20%5Calpha_j%20+%20%5Cphi_j(%5Cbeta_1X_1%20+%20%5Cbeta_2X_2%20+%20...%20+%20%5Cbeta_pX_p)%20"></p>
<p>where J is the baseline (i.e., last) category for this given equation, <img src="https://latex.codecogs.com/png.latex?j=1,2,...,%20J%20-%201">, Y is the ordinal response variable with J categories, _j represents the intercepts, the values are the coefficients for X variables, and _j represents the constraints or scale parameters used to determine whether the outcome variable is ordinal. Importantly, _j assumes that</p>
<p><img src="https://latex.codecogs.com/png.latex?%201%20=%20%5Cphi_1%20%3E%20%5Cphi_2%20%3E%20%5Cphi_3%20%3E%20...%20%3E%20%5Cphi_%7BJ-1%7D%20%3E%20%5Cphi_J%20=%200%20"></p>
<p>Notice that the constraints are ordered from one to zero, with each subsequent constraint being smaller than the last. Therefore, <img src="https://latex.codecogs.com/png.latex?%5Cphi_1%20=%201"> and <img src="https://latex.codecogs.com/png.latex?%5Cphi_J%20=%200">, the constraints in the middle falling somewhere in between. What this does is force the model to have <em>ordered</em> categorical variables. Suppose, then, that you have a variable where J = 4. Once you know what <img src="https://latex.codecogs.com/png.latex?%5Cphi_1"> and <img src="https://latex.codecogs.com/png.latex?%5Cphi_4"> are, the only constraints you have left to estimate are <img src="https://latex.codecogs.com/png.latex?%5Cphi_2"> and <img src="https://latex.codecogs.com/png.latex?%5Cphi_3">.</p>
<p>As you can probably guess from the model formula above, the values are distributed across your coefficients, leading to</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cphi_1%5Cbeta%20%3E%20%5Cphi_2%5Cbeta%20%3E%20%5Cphi_3%5Cbeta%20%3E%20%5Cphi_4%5Cbeta%20"></p>
<p>assuming we continue with our earlier example. As you can see here, the scale parameters (aka, constraints) ensure ordinality in the model.</p>
<p>Naturally, this leads to a minor complication when calculating the odds of being in category j versus category m. Rather than simply exponentiating the coefficients, we take the exponential of <img src="https://latex.codecogs.com/png.latex?%5B(%5Calpha_j%20-%20%5Calpha_m)%20+%20(%5Cphi_j%20-%20%5Cphi_m)%5Cbeta%5D"></p>
</section>
<section id="odds-ratios" class="level1">
<h1>Odds Ratios <a name="section2"></a></h1>
<p>The stereotype logit model estimates the log odds of being in a given category relative to the baseline. Therefore, generating the odds ratio can be done by</p>
<p><img src="https://latex.codecogs.com/png.latex?%20Odds(Y%20=%20j%20vs.%20Y%20=%20J)%20=%20%5Cfrac%7BP(Y%20=%20j)%7D%7BP(Y%20=%20J)%7D%20"></p>
<p>where j can be any category from 1 to J - 1. Recall, however, that the log odds of being in a given category as opposed to the baseline need to be multiplied by the scale parameters 4_j$, as we saw above.</p>
</section>
<section id="running-it-in-r" class="level1">
<h1>Running it in R <a name="section3"></a></h1>
<p>Running the stereotype logit model in r works with the <code>rrvglm</code> function from the <code>VGAM</code> package. An SL model would look like the following:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">sl.model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rrvglm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> multinomial, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rank =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(sl.model)</span></code></pre></div>
<p>where <code>rank = 1</code> indicates to R that the model is a one-dimensional SL model.</p>
<p>After you run your model, be sure to get the odds ratio table to interpret the results.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"></span>
<span id="cb2-2">sl.or <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(sl.model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">matrix =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span></code></pre></div>


<!-- -->

</section>

 ]]></description>
  <category>Notes</category>
  <category>Stereotyped Logit</category>
  <category>Model</category>
  <category>Data Science</category>
  <guid>https://kevinnavreteparra.github.io/kevin-quarto-blog/posts/Notes/stereotype-logit.html</guid>
  <pubDate>Sun, 24 Sep 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
